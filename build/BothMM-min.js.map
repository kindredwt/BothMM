{"version":3,"sources":["webpack:///build/BothMM-min.js","webpack:///webpack/bootstrap ba6ec12a2ca9aeec81b7","webpack:///./src/main.js","webpack:///./src/utils.js","webpack:///./src/tls/converter.js","webpack:///./src/tls/specs.js"],"names":["BothMM","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","findWithAttr","an","document","querySelectorAll","all","getElementsByTagName","marked","i","length","getAttribute","push","discardIfAncestorAttr","elms","good","elm","parentNode","translateSub","encSrc","encTgt","encoding","nodeType","__raw","nodeValue","_tlsConverter","convert","encSrcSel","encTgtEff","setAttribute","childNodes","getCookie","key","decodeURIComponent","cookie","replace","RegExp","encodeURIComponent","setCookie","value","path","onDomReady","zawgyiOneFont","hasFont","roots","_utils","console","log","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","root","err","setEncoding","selectors","addEventListener","evt","target","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","readyListeners","listener","e","error","Object","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","becListeners","aecListeners","this","f","setTimeout","font","node","createElement","innerHTML","firstChild","style","fontFamily","body","appendChild","widthOrSans","clientWidth","widthOrMono","removeChild","before","VERSION","ready","readyState","window","_interopRequireDefault","obj","__esModule","default","txtSrc","txtUni","convSrc","converters","convertToUnicode","txtTgt","convTgt","convertFromUnicode","_specs","_specs2","UNICODE_SEQUENCE","LEGACY_SEQUENCE","Converter","spec","useZwsp","sourceEncoding","fonts","unicodePattern","buildRegExp","legacyPattern","join","sequence","isUnicode","j","k","pattern","escapeRe","reverse","minCodePoint","charCodeAt","maxCodePoint","alternates","codePoint","underscore","indexOf","substring","escapedAlternate","sort","sortLongestFirst","subPattern","legacyStackPattern","legacyKinziPattern","legacyLigPattern","inputText","convertToUnicodeSyllables","outputText","syllables","pos","lastIndex","prevSyllable","match","exec","index","nonMatched","toUnicodeMapper","ret","matchData","syllable","g","component","charAt","substr","outputOrder","fromUnicodeMapper","unicodeSyllable","widthVariant","upperVariant","re","retValue","utn11","TlsMyanmarUtn11","legacyRange","String","fromCharCode","codeRange","matchCharCount","nonMyanmarCount","strippedNonMatched","freq","a","b","kinzi","cons","stack","asat","medialY","medialR","medialW","medialH","eVowel","uVowel","lVowel","karenVowel","shanVowel","aVowel","anusvara","pwoTone","lowerDot","monH","visarga","redup","section","lastSyl","pop","enc","conv","toLowerCase","zawgyi-one","င်္","င်္ိ_lig","င်္ီ_lig","င်္ံ_lig","က","ခ","ဂ","ဃ","င","စ","ဆ","ဇ","ဈ","ဉ","ဉ_alt","ည","ည_alt","ဋ","ဌ","ဍ","ဎ","ဏ","တ","ထ","ဒ","ဓ","န","န_alt","ပ","ဖ","ဗ","ဘ","မ","ယ","ရ","ရ_alt","ရ_tall","လ","ဝ","သ","ဟ","ဠ","အ","ဣ","ဤ","ဥ","ဦ","ဧ","ဩ","ဪ","ဿ","၌","၍","၎","၎င်း","၏","၀","၁","၂","၃","၄","၅","၆","၇","၈","၉","။","၊","lig","ဍ္ဍ","ဍ္ဎ","ဏ္ဍ","ဋ္ဌ","ဋ္ဋ","္က","္ခ","္ဂ","္ဃ","္စ","္ဆ","္ဆ_narrow","္ဇ","္ဈ","္ဋ","္ဌ","္ဍ","္ဎ","္ဏ","္တ","္တ_narrow","္တွ","္ထ","္ထ_narrow","္ဒ","္ဓ","္န","္ပ","္ဖ","္ဗ","္ဘ","္မ","္ယ","္ရ","္လ","္သ","္အ","yapin","ျ","ျ_alt","ျွ_lig","ျှ_lig","ျွှ_lig","yayit","ြ","ြ_wide","ြ_upper_narrow","ြ_upper_wide","ြ_lower_narrow","ြ_lower_wide","ြ_lower_upper_narrow","ြ_lower_upper_wide","ြွ_narrow","ြွ_wide","ြွ_upper_narrow","ြွ_upper_wide","ြု_narrow","ြု_wide","ြု_upper_narrow","ြု_upper_wide","wasway","ွ","ွှ_lig","ွှ_small","hatoh","ှ","ှ_small","ှု_lig","ှူ_lig","ေ","ိ","ိံ_lig","ီ","ု","ု_tall","ူ","ူ_tall","ံ","ဲ","ါ","ါ်_lig","ာ","lDot","့","့_alt","့_left","့_spaceDot","့_spaceDotAlt","်","း","wininnwa","ဉာ_lig","ကျပ်","wwin_burmese1","ဋ_alt","ဏ္ဌ","ဏ္ဏ","ဏ္ဋ","ဉ္စ","ဉ္ဇ","္ဇျ_lig","္တ_narrow2","ျွ_alt","ျွှ_alt","ြို_narrow","ြို_wide","ွ_alt","ွှ_alt","ွှ_alt2","ွှ_alt3","ှ_alt","့_alt2","့_left2","့_left3"],"mappings":"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","file":"build/BothMM-min.js","sourcesContent":["var BothMM =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n\t// License: GNU Lesser General Public License, version 2.1 or later.\n\t// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _tlsConverter = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\t// Private state\n\t\n\tvar readyListeners = [];\n\tvar becListeners = [];\n\tvar aecListeners = [];\n\t\n\t/**\n\t * Library to allow Burmese-language web content to be authored in both Zawgyi-One and Unicode and to be viewed by users\n\t * whichever font/encoding they have configured in their browsers.\n\t *\n\t * It initially has a very limited set of members, until the library has properly initialised. Those members are\n\t * documented as such.\n\t */\n\t\n\tvar BothMM = (function () {\n\t    function BothMM() {\n\t        _classCallCheck(this, BothMM);\n\t    }\n\t\n\t    _createClass(BothMM, null, [{\n\t        key: 'ready',\n\t\n\t        /**\n\t         * Call the passed-in function when the BothMM library is whenReady. This is guaranteed to also be after the DOM is\n\t         * initialised.\n\t         * @param f\n\t         */\n\t        value: function ready(f) {\n\t            if (readyListeners) {\n\t                readyListeners.push(f);\n\t            } else {\n\t                setTimeout(f, 0);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hasFont',\n\t\n\t        /**\n\t         * Tests whether a given font is installed in the user's browser.\n\t         * @param {string} font The name of the font to test for\n\t         * @returns {boolean} Whether the font is available\n\t         */\n\t        value: function hasFont(font) {\n\t            /* Works by constructing a <div/> with some text in the requested font,\n\t             * but either \"sans-serif\" or \"monospace\" as the backup font. If the font\n\t             * exists, the browser will use that font and both elements have the same\n\t             * width. If the font does not exist, the fallback fonts have very\n\t             * different widths. */\n\t\n\t            var node = document.createElement('div');\n\t            node.innerHTML = '<span style=\"position:absolute!important;width:auto!important;font-size:100px!important;left:-999px\">. . .</span>';\n\t            node = node.firstChild;\n\t\n\t            node.style.fontFamily = font + ', sans-serif';\n\t            document.body.appendChild(node);\n\t            var widthOrSans = node.clientWidth;\n\t            node.style.fontFamily = font + ', monospace';\n\t            var widthOrMono = node.clientWidth;\n\t            document.body.removeChild(node);\n\t\n\t            return widthOrSans == widthOrMono;\n\t        }\n\t    }, {\n\t        key: 'beforeEncodingChange',\n\t\n\t        /**\n\t         * Register function to call before the encoding is changed.\n\t         * If the function throws an exception, then the change will be aborted. */\n\t        value: function beforeEncodingChange(f) {\n\t            becListeners.push(f);\n\t        }\n\t    }, {\n\t        key: 'afterEncodingChange',\n\t\n\t        /**\n\t         * Register function to call after the encoding has been changed.\n\t         * If the function throws an exception, then the change will be aborted. */\n\t        value: function afterEncodingChange(f) {\n\t            aecListeners.push(f);\n\t        }\n\t    }, {\n\t        key: 'setEncoding',\n\t\n\t        /**\n\t         *  Set the target encoding and translate all discovered element.\n\t         *  @param {string=} encoding Change to this encoding or omit to refresh translation.\n\t         */\n\t        value: function setEncoding(encoding) {\n\t            if (encoding === undefined) {\n\t                encoding = BothMM.encoding;\n\t            }\n\t            var before = BothMM.encoding;\n\t            for (var i = 0; i < becListeners.length; i++) {\n\t                becListeners[i](before, encoding);\n\t            }\n\t            BothMM.encoding = encoding;\n\t            translateSub('off', BothMM.roots);\n\t\n\t            setCookie('BothMM.encoding', encoding, '/');\n\t            for (i = 0; i < aecListeners.length; i++) {\n\t                try {\n\t                    aecListeners[i](before, encoding);\n\t                } catch (e) {\n\t                    _utils.console.error(e);\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BothMM;\n\t})();\n\t\n\texports['default'] = BothMM;\n\t\n\t/**\n\t * The library version according to <a href=\"http://semver.org/\">semver</a> semantics.\n\t *\n\t * This member is available during initialisation.\n\t */\n\tBothMM.VERSION = '0.0.1';\n\t\n\t/**\n\t * The DOM elements to translate. Defaults to anything with a [both-mm] attribute,\n\t * unless it is nested within another such element. */\n\tBothMM.roots = [];\n\t\n\t/**\n\t * Re-export the convert function\n\t * @type {convert}\n\t */\n\tBothMM.convert = _tlsConverter.convert;\n\t\n\t///////////////////////////////////////////////////////////////////\n\t// Utility functions\n\t\n\t/**\n\t * Find all nodes on page with a given attribute\n\t *\n\t * @param {string} an\n\t * @returns {Array<Element> | NodeList}\n\t */\n\tfunction findWithAttr(an) {\n\t    if (typeof document.querySelectorAll == 'function') {\n\t        return document.querySelectorAll('[' + an + ']');\n\t    } else {\n\t        var all = document.getElementsByTagName('*');\n\t        var marked = [];\n\t        for (var i = 0; i < all.length; i++) {\n\t            if (all[i].getAttribute(an)) {\n\t                marked.push(all[i]);\n\t            }\n\t        }\n\t    }\n\t    return marked;\n\t}\n\t\n\t/**\n\t * Filters a list of Nodes, discarding the ones with an ancestor having a particular attribute\n\t * @param {string} an\n\t * @param {Array<Element> | NodeList} elms\n\t * @returns {Array<Element>}\n\t */\n\tfunction discardIfAncestorAttr(an, elms) {\n\t    var good = [];\n\t    for (var i = 0; i < elms.length; i++) {\n\t        var elm = elms[i];\n\t        for (var p = elm.parentNode; p && p.getAttribute; p = p.parentNode) {\n\t            //console.log('>', p);\n\t            if (p.getAttribute(an)) {\n\t                elm = null;\n\t            }\n\t        }\n\t        if (elm) {\n\t            good.push(elm);\n\t        }\n\t    }\n\t    return good;\n\t}\n\t\n\t/**\n\t * Recursively translate a list of elements.\n\t *\n\t * @param encSrc Encoding source inherited from parents. This may be overridden in children.\n\t * @param elms List of elements to translate.\n\t */\n\tfunction translateSub(encSrc, elms) {\n\t    var encTgt = BothMM.encoding;\n\t    for (var i = 0; i < elms.length; i++) {\n\t        var elm = elms[i];\n\t\n\t        if (elm.nodeType == 3) {\n\t            // It's a text node, so let's do some actual text conversion\n\t            if (!elm.__raw) {\n\t                // TODO: Brittle\n\t                elm.__raw = elm.nodeValue;\n\t            }\n\t            elm.nodeValue = (0, _tlsConverter.convert)(encSrc, encTgt, elm.__raw);\n\t        } else {\n\t            // No text here. Update settings and recurse\n\t            var encSrcSel = elm.getAttribute('both-mm') || encSrc;\n\t            var encTgtEff = encSrcSel == 'off' ? 'off' : encTgt != encSrcSel ? encTgt : 'off';\n\t            //console.log(encSrc, encSrcSel, \"->\", encTgt, encTgtEff, elm);\n\t            elm.setAttribute('both-mm-now', encTgtEff);\n\t            translateSub(encSrcSel, elm.childNodes);\n\t        }\n\t    }\n\t}\n\t\n\tfunction getCookie(key) {\n\t    return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\n\t}\n\t\n\tfunction setCookie(key, value, path) {\n\t    document.cookie = encodeURIComponent(key) + '=' + encodeURIComponent(value) + '; expires=Fri, 31 Dec 9999 23:59:59 GMT' + (path ? '; path=' + path : '');\n\t}\n\t\n\t// INITIALISE WHEN DOM IS READY\n\t\n\t/** Initialise BothMM state when DOM is whenReady. */\n\tfunction onDomReady() {\n\t\n\t    /**\n\t     * Whether the Zawgyi-One font is available in the user's browser.\n\t     * @type {bool}\n\t     */\n\t    BothMM.zawgyiOneFont = BothMM.hasFont('Zawgyi-One');\n\t\n\t    /**\n\t     * Translate elements to use this presentation.\n\t     * @type {string} (zawgyi-one|unicode|off)\n\t     */\n\t    BothMM.encoding = getCookie('BothMM.encoding') || 'unicode';\n\t\n\t    BothMM.roots = discardIfAncestorAttr('both-mm', findWithAttr('both-mm'));\n\t    _utils.console.log('BothMM.roots discovered:', BothMM.roots.length);\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = BothMM.roots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var root = _step.value;\n\t\n\t            _utils.console.log('  ', root);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator['return']) {\n\t                _iterator['return']();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    // Translate all the discovered elements\n\t    BothMM.setEncoding();\n\t\n\t    // Change the encoding when any element with the \"both-mm-select\" attribute is clicked\n\t    var selectors = findWithAttr('both-mm-select');\n\t    for (var i = 0; i < selectors.length; i++) {\n\t        selectors[i].addEventListener('click', function (evt) {\n\t            var encoding = evt.target.getAttribute('both-mm-select');\n\t            BothMM.setEncoding(encoding);\n\t        });\n\t    }\n\t\n\t    // Notify listeners that we are ready\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = readyListeners[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var listener = _step2.value;\n\t\n\t            try {\n\t                listener();\n\t            } catch (e) {\n\t                _utils.console.error(e);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n\t                _iterator2['return']();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t\n\t    readyListeners = undefined;\n\t}\n\t\n\t(function ready() {\n\t    if (document.readyState === 'complete') {\n\t        setTimeout(onDomReady, 1);\n\t    } else if (document.addEventListener) {\n\t        document.addEventListener('DOMContentLoaded', onDomReady);\n\t    } else {\n\t        setTimeout(ready, 20);\n\t    }\n\t})();\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t// Ensure that console.log and console.error don't cause errors\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar console = window.console || {};\n\texports.console = console;\n\tconsole.log = console.log || function () {};\n\tconsole.error = console.error || console.log;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright (C) 2010 Keith Stribley http://www.ThanLwinSoft.org/\n\t// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n\t// License: GNU Lesser General Public License, version 2.1 or later.\n\t// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\texports.convert = convert;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _utils = __webpack_require__(3);\n\t\n\tvar _specs = __webpack_require__(6);\n\t\n\tvar _specs2 = _interopRequireDefault(_specs);\n\t\n\t// Static tables other than the encoding specs\n\t\n\tvar UNICODE_SEQUENCE = ['kinzi', null, 'lig', null, 'cons', 'stack', 'asat', 'yapin', 'yayit', 'wasway', 'hatoh', 'eVowel', 'uVowel', 'lVowel', 'anusvara', 'aVowel', 'lDot', 'asat', 'lDot', 'visarga'];\n\t// null is used as a place holder for the ((lig)|((cons)|(numbers)(stack)?)) groups\n\tvar LEGACY_SEQUENCE = ['eVowel', 'yayit', null, 'lig', null, 'cons', 'stack', 'kinzi', 'uVowel', 'anusvara', 'asat', 'stack', 'yapin', 'wasway', 'hatoh', 'wasway', 'yapin', 'kinzi', 'uVowel', 'lDot', 'lVowel', 'lDot', 'anusvara', 'uVowel', 'lVowel', 'aVowel', 'stack', 'lDot', 'visarga', 'asat', 'lDot', 'visarga', 'lDot'];\n\t\n\t/**\n\t * Class to handle converting Myanmar (Burmese) text to/from Myanmar Unicode 5.1.\n\t * Myanmar Unicode text is assumed to conform to UTN11r3.\n\t * @param spec - hierarchical maps for each component of syllable for Unicode to legacy conversion\n\t */\n\t\n\tvar Converter = (function () {\n\t    function Converter(spec) {\n\t        _classCallCheck(this, Converter);\n\t\n\t        this.spec = spec;\n\t        this.useZwsp = false;\n\t        this.sourceEncoding = spec.fonts[0];\n\t        this.unicodePattern = this.buildRegExp(UNICODE_SEQUENCE, true);\n\t        this.legacyPattern = this.buildRegExp(LEGACY_SEQUENCE, false);\n\t        this.fontFamily = spec.fonts.join(', ');\n\t    }\n\t\n\t    _createClass(Converter, [{\n\t        key: 'buildRegExp',\n\t        value: function buildRegExp(sequence, isUnicode) {\n\t            var i, j, k;\n\t\n\t            var pattern = '';\n\t            var escapeRe = new RegExp('([\\\\^\\\\$\\\\\\\\\\\\.\\\\*\\\\+\\\\?\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\\\\|])', 'g');\n\t            if (!this.reverse) {\n\t                this.reverse = {};\n\t            }\n\t            if (!this.minCodePoint) {\n\t                this.minCodePoint = this.spec['cons']['က'].charCodeAt(0);\n\t                this.maxCodePoint = this.minCodePoint;\n\t            }\n\t            for (i = 0; i < sequence.length; i++) {\n\t                var alternates = [];\n\t                if (sequence[i] == null) {\n\t                    continue;\n\t                }\n\t                if (this.reverse[sequence[i]] == null) {\n\t                    this.reverse[sequence[i]] = {};\n\t                }\n\t                for (j in this.spec[sequence[i]]) {\n\t                    if (this.spec[sequence[i]][j] && this.spec[sequence[i]][j].length > 0) {\n\t                        for (k = 0; k < this.spec[sequence[i]][j].length; k++) {\n\t                            var codePoint = this.spec[sequence[i]][j].charCodeAt(k);\n\t                            if (codePoint != 0x20) {\n\t                                if (codePoint > this.maxCodePoint) {\n\t                                    this.maxCodePoint = codePoint;\n\t                                }\n\t                                if (codePoint < this.minCodePoint) {\n\t                                    this.minCodePoint = codePoint;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (isUnicode) {\n\t                            // items with an underscore suffix are not put into the regexp\n\t                            // but they are used to build the legacy to unicode map\n\t                            var underscore = j.indexOf('_');\n\t                            if (underscore == -1) {\n\t                                this.reverse[sequence[i]][this.spec[sequence[i]][j]] = j;\n\t                                alternates.push(j.replace(escapeRe, '\\\\$1'));\n\t                            } else {\n\t                                this.reverse[sequence[i]][this.spec[sequence[i]][j]] = j.substring(0, underscore);\n\t                            }\n\t                        } else {\n\t                            var escapedAlternate = this.spec[sequence[i]][j].replace(escapeRe, '\\\\$1');\n\t                            alternates.push(escapedAlternate);\n\t                        }\n\t                    }\n\t                }\n\t                alternates = alternates.sort(Converter.sortLongestFirst);\n\t                if (sequence[i] == 'cons') {\n\t                    pattern += '(';\n\t                } else if (sequence[i] == 'lig') {\n\t                    pattern += '(';\n\t                }\n\t                pattern += '(';\n\t                var subPattern = '';\n\t                for (k = 0; k < alternates.length; k++) {\n\t                    if (k == 0) {\n\t                        subPattern += alternates[k];\n\t                    } else {\n\t                        subPattern += '|' + alternates[k];\n\t                    }\n\t                }\n\t                if (sequence[i] == 'stack') {\n\t                    this.legacyStackPattern = new RegExp(subPattern);\n\t                }\n\t                if (sequence[i] == 'kinzi') {\n\t                    this.legacyKinziPattern = new RegExp(subPattern);\n\t                }\n\t                if (sequence[i] == 'lig') {\n\t                    this.legacyLigPattern = new RegExp(subPattern);\n\t                }\n\t                pattern += subPattern + ')';\n\t                if (sequence[i] == 'cons') {} else if (sequence[i] == 'lig') {\n\t                    pattern += '|';\n\t                } else if (sequence[i] == 'stack' && sequence[i - 1] == 'cons') {\n\t                    pattern += '?))';\n\t                } else if (sequence[i] == 'wasway' || sequence[i] == 'hatoh' || sequence[i] == 'uVowel' || sequence[i] == 'lVowel' || sequence[i] == 'aVowel' || sequence[i] == 'lDot' || sequence[i] == 'visarga') {\n\t                    if (isUnicode) {\n\t                        pattern += '?';\n\t                    } else {\n\t                        pattern += '*';\n\t                    } // these are frequently multi-typed\n\t                } else {\n\t                    pattern += '?';\n\t                }\n\t            }\n\t            /*if (isUnicode) {\n\t                console.log(\"unicode pattern: \" + pattern);\n\t            } else {   //^ $ \\ . * + ? ( ) [ ] { } |\n\t                console.log(\"legacy pattern: \" + pattern);\n\t            }*/\n\t            return new RegExp(pattern, 'g');\n\t        }\n\t    }, {\n\t        key: 'convertToUnicode',\n\t\n\t        /**\n\t         * Convert text to Unicode\n\t         * @param inputText in legacy encoding\n\t         * @return converted text in Unicode 5.1\n\t         */\n\t        value: function convertToUnicode(inputText) {\n\t            return this.convertToUnicodeSyllables(inputText).outputText;\n\t        }\n\t    }, {\n\t        key: 'convertToUnicodeSyllables',\n\t\n\t        /**\n\t         * Convert text to Unicode\n\t         * @param inputText in legacy encoding\n\t         * @return converted text in Unicode 5.1\n\t         */\n\t        value: function convertToUnicodeSyllables(inputText) {\n\t            var outputText = '';\n\t            var syllables = [];\n\t            var pos = 0;\n\t            this.legacyPattern.lastIndex = 0;\n\t            var prevSyllable = null;\n\t            var match = this.legacyPattern.exec(inputText);\n\t            while (match) {\n\t                if (match.index != pos) {\n\t                    prevSyllable = null;\n\t                    var nonMatched = inputText.substring(pos, match.index);\n\t                    outputText += nonMatched;\n\t                    syllables.push(nonMatched);\n\t                }\n\t                pos = this.legacyPattern.lastIndex;\n\t                //console.log(\"To Unicode Match: \" + match);\n\t                prevSyllable = this.toUnicodeMapper(inputText, match, prevSyllable);\n\t                syllables.push(prevSyllable);\n\t                outputText += prevSyllable;\n\t                match = this.legacyPattern.exec(inputText);\n\t            }\n\t            if (pos < inputText.length) {\n\t                nonMatched = inputText.substring(pos, inputText.length);\n\t                outputText += nonMatched;\n\t                syllables.push(nonMatched);\n\t            }\n\t            var ret = {};\n\t            ret.outputText = outputText;\n\t            ret.syllables = syllables;\n\t            return ret;\n\t        }\n\t    }, {\n\t        key: 'toUnicodeMapper',\n\t\n\t        /**\n\t         * @internal\n\t         */\n\t        value: function toUnicodeMapper(inputText, matchData, prevSyllable) {\n\t            var syllable = {};\n\t            for (var g = 1; g < matchData.length; g++) {\n\t                var component = LEGACY_SEQUENCE[g - 1];\n\t                if (component == null || matchData[g] == null) {\n\t                    continue;\n\t                }\n\t                // TODO handle repeated components\n\t                if (syllable[component]) {\n\t                    _utils.console.log('Unicode Syllable:' + matchData[0] + ' multiple values ' + syllable[component] + ' / ' + this.reverse[component][matchData[g]]);\n\t                }\n\t                syllable[component] = this.reverse[component][matchData[g]];\n\t                if (!syllable[component]) {\n\t                    _utils.console.log('Undefined ' + component + ' ' + matchData[g]);\n\t                }\n\t                // check a few sequences putting ligature components in right place\n\t                if (syllable[component].length > 1) {\n\t                    if (component == 'yapin') {\n\t                        if (syllable[component].charAt(1) == 'ွ') {\n\t                            syllable['wasway'] = 'ွ';\n\t                            if (syllable[component].length > 2) {\n\t                                if (syllable[component].charAt(2) == 'ှ') {\n\t                                    syllable['hatoh'] = 'ှ';\n\t                                } else {\n\t                                    _utils.console.log('Unhandled yapin ligature: ' + syllable[component]);\n\t                                }\n\t                            }\n\t                            syllable[component] = syllable[component].substring(0, 1);\n\t                        } else if (syllable[component].charAt(1) == 'ှ' || syllable[component].length > 2) {\n\t                            syllable['hatoh'] = 'ှ';\n\t                            syllable[component] = syllable[component].substring(0, 1);\n\t                        }\n\t                    } else if (component == 'yayit') {\n\t                        if (syllable[component].charAt(1) == 'ွ') {\n\t                            syllable['wasway'] = 'ွ';\n\t                        } else if (syllable[component].charAt(1) == 'ု') {\n\t                            syllable['lVowel'] = 'ု';\n\t                        } else if (syllable[component].charAt(1) == 'ိ' && syllable[component].charAt(2) == 'ု') {\n\t                            syllable['uVowel'] = 'ိ';\n\t                            syllable['lVowel'] = 'ု';\n\t                        } else {\n\t                            _utils.console.log('unhandled yayit ligature: ' + syllable[component]);\n\t                        }\n\t                        syllable[component] = syllable[component].substring(0, 1);\n\t                    } else if (component == 'wasway') {\n\t                        syllable['hatoh'] = syllable[component].substring(1, 2);\n\t                        syllable[component] = syllable[component].substring(0, 1);\n\t                    } else if (component == 'hatoh') {\n\t                        syllable['lVowel'] = syllable[component].substring(1, 2);\n\t                        syllable[component] = syllable[component].substring(0, 1);\n\t                    } else if (component == 'uVowel') {\n\t                        syllable['anusvara'] = syllable[component].substring(1, 2);\n\t                        syllable[component] = syllable[component].substring(0, 1);\n\t                    } else if (component == 'aVowel') {\n\t                        syllable['asat'] = syllable[component].substring(1, 2);\n\t                        syllable[component] = syllable[component].substring(0, 1);\n\t                    } else if (component == 'kinzi') {\n\t                        // kinzi is length 3 to start with\n\t                        if (syllable[component].charAt(3) == 'ံ' || syllable[component].length > 4 && syllable[component].charAt(4) == 'ံ') {\n\t                            syllable['anusvara'] = 'ံ';\n\t                        }\n\t                        if (syllable[component].charAt(3) == 'ိ' || syllable[component].charAt(3) == 'ီ') {\n\t                            syllable['uVowel'] = syllable[component].charAt(3);\n\t                        }\n\t                        syllable[component] = syllable[component].substring(0, 3);\n\t                    } else if (component == 'cons') {\n\t                        if (syllable[component].charAt(1) == 'ာ') {\n\t                            syllable['aVowel'] = syllable[component].charAt(1);\n\t                            syllable[component] = syllable[component].substring(0, 1);\n\t                        }\n\t                    } else if (component == 'stack' || component == 'lig') {} else {\n\t                        _utils.console.log('unhandled ligature: ' + component + ' ' + syllable[component]);\n\t                    }\n\t                }\n\t            }\n\t            // now some post processing\n\t            if (syllable['asat']) {\n\t                if (!syllable['eVowel'] && (syllable['yayit'] || syllable['yapin'] || syllable['wasway'] || syllable['lVowel'])) {\n\t                    syllable['contraction'] = syllable['asat'];\n\t                    delete syllable['asat'];\n\t                }\n\t                if (syllable['cons'] == 'ဥ') {\n\t                    syllable['cons'] = 'ဉ';\n\t                }\n\t            }\n\t            if (syllable['cons'] == 'ဥ' && syllable['uVowel'] == 'ီ') {\n\t                syllable['cons'] = 'ဦ';\n\t                delete syllable['uVowel'];\n\t            } else if (syllable['cons'] == 'စ' && syllable['yapin']) {\n\t                syllable['cons'] = 'ဈ';\n\t                delete syllable['yapin'];\n\t            } else if (syllable['cons'] == 'သ' && syllable['yayit']) {\n\t                if (syllable['eVowel'] && syllable['aVowel'] && syllable['asat']) {\n\t                    syllable['cons'] = 'ဪ';\n\t                    delete syllable['yayit'];\n\t                    delete syllable['eVowel'];\n\t                    delete syllable['aVowel'];\n\t                    delete syllable['asat'];\n\t                } else {\n\t                    syllable['cons'] = 'ဩ';\n\t                    delete syllable['yayit'];\n\t                }\n\t            } else if (syllable['cons'] == '၀') {\n\t                // convert zero to wa except in numbers\n\t                if (matchData[0].length == 1 && matchData.index > 0 && inputText.charAt(matchData.index - 1) == this.spec['cons']['အ'] || matchData[0].length > 1 && (matchData.index == 0 || inputText.charCodeAt(matchData.index - 1) < 0x1040 || inputText.charCodeAt(matchData.index - 1) > 0x1049) || inputText.length > matchData.index + matchData[0].length && (inputText.charAt(matchData.index + matchData[0].length).match(this.legacyLigPattern) || inputText.charCodeAt(matchData.index + matchData[0].length) >= 0x1000 && inputText.charCodeAt(matchData.index + matchData[0].length) <= 0x1021 || inputText.charAt(matchData.index + matchData[0].length) == this.spec['cons']['ဿ']) || inputText.length > matchData.index + matchData[0].length + 1 && (inputText.charAt(matchData.index + matchData[0].length + 1) == this.spec['asat']['်'] || inputText.charAt(matchData.index + matchData[0].length + 1).match(this.legacyStackPattern) || inputText.charAt(matchData.index + matchData[0].length + 1).match(this.legacyKinziPattern)) || inputText.length > matchData.index + matchData[0].length + 2 && inputText.charAt(matchData.index + matchData[0].length + 2) == this.spec['asat']['်'] && inputText.charAt(matchData.index + matchData[0].length + 1) == this.spec['asat']['့']) {\n\t                    syllable['cons'] = 'ဝ';\n\t                }\n\t            } else if (syllable['cons'] == '၄' && inputText.length >= matchData.index + matchData[0].length + 3) {\n\t                // check for lagaun\n\t                if (inputText.substr(matchData.index + matchData[0].length, 3) == this.spec['cons']['င'] + this.spec['asat']['်'] + this.spec['visarga']['း']) {\n\t                    syllable['cons'] = '၎';\n\t                }\n\t            } else if (syllable['cons'] == '၇' && (syllable['eVowel'] || syllable['uVowel'] || syllable['lVowel'] || syllable['anusvara'] || syllable['aVowel'] || syllable['lDot'] || syllable['asat'] || syllable['wasway'] || syllable['hatoh'])) {\n\t                // check for lagaun\n\t                // if (inputText.substr(matchData.index + matchData[0].length, 3) ==\n\t                // this.spec[\"cons\"][\"င\"] + this.spec[\"asat\"][\"်\"] + this.spec[\"visarga\"][\"း\"])\n\t                syllable['cons'] = 'ရ';\n\t                _utils.console.log('7 found instead of ရ: ' + inputText);\n\t            }\n\t            var outputText = '';\n\t            if (this.useZwsp && !syllable['kinzi'] && !syllable['lig'] && !syllable['stack'] && !syllable['contraction'] && !syllable['asat'] && prevSyllable != '​အ' && prevSyllable != null) {\n\t                outputText += '​';\n\t            }\n\t            var outputOrder = ['kinzi', 'lig', 'cons', 'numbers', 'stack', 'contraction', 'yapin', 'yayit', 'wasway', 'hatoh', 'eVowel', 'uVowel', 'lVowel', 'anusvara', 'aVowel', 'lDot', 'asat', 'visarga'];\n\t            for (var i = 0; i < outputOrder.length; i++) {\n\t                if (syllable[outputOrder[i]]) {\n\t                    outputText += syllable[outputOrder[i]];\n\t                }\n\t            }\n\t            return outputText;\n\t        }\n\t    }, {\n\t        key: 'convertFromUnicode',\n\t\n\t        /**\n\t         * Convert text from Unicode into a legacy encoding.\n\t         * @param inputText in Unicode 5.1\n\t         * @return text in legacy encoding\n\t         */\n\t        value: function convertFromUnicode(inputText) {\n\t            inputText = inputText.replace(/[\\u200B\\u2060]/g, '');\n\t            var outputText = '';\n\t            var pos = 0;\n\t            this.unicodePattern.lastIndex = 0;\n\t            var match = this.unicodePattern.exec(inputText);\n\t            while (match) {\n\t                outputText += inputText.substring(pos, match.index);\n\t                pos = this.unicodePattern.lastIndex;\n\t                //console.log(\"From Unicode Match: \" + match);\n\t                outputText += this.fromUnicodeMapper(inputText, match);\n\t                match = this.unicodePattern.exec(inputText);\n\t            }\n\t            if (pos < inputText.length) {\n\t                outputText += inputText.substring(pos, inputText.length);\n\t            }\n\t            return outputText;\n\t        }\n\t    }, {\n\t        key: 'fromUnicodeMapper',\n\t\n\t        /**\n\t         * @internal\n\t         */\n\t        value: function fromUnicodeMapper(inputText, matchData) {\n\t            var unicodeSyllable = {};\n\t            var syllable = {};\n\t            for (var g = 1; g < matchData.length; g++) {\n\t                var component = UNICODE_SEQUENCE[g - 1];\n\t                if (component == null || matchData[g] == null) {\n\t                    continue;\n\t                }\n\t                // TODO handle repeated components\n\t                if (syllable[component]) {\n\t                    _utils.console.log('Legacy Syllable:' + matchData[0] + ' ' + component + ' multiple values ' + syllable[component] + ' / ' + this.spec[component][matchData[g]]);\n\t                }\n\t                unicodeSyllable[component] = matchData[g];\n\t                syllable[component] = this.spec[component][matchData[g]];\n\t            }\n\t            var key;\n\t            if (unicodeSyllable['kinzi']) {\n\t                if (unicodeSyllable['uVowel']) {\n\t                    if (unicodeSyllable['anusvara']) {\n\t                        key = unicodeSyllable['kinzi'] + unicodeSyllable['uVowel'] + unicodeSyllable['anusvara'] + '_lig';\n\t                        if (this.spec['kinzi'][key] && this.spec['kinzi'][key].length) {\n\t                            syllable['kinzi'] = this.spec['kinzi'][key];\n\t                            delete syllable['anusvara'];\n\t                        }\n\t                    } else {\n\t                        key = unicodeSyllable['kinzi'] + unicodeSyllable['uVowel'] + '_lig';\n\t                        if (this.spec['kinzi'][key] && this.spec['kinzi'][key].length) {\n\t                            syllable['kinzi'] = this.spec['kinzi'][key];\n\t                            delete syllable['uVowel'];\n\t                        }\n\t                    }\n\t                }\n\t                if (unicodeSyllable['anusvara']) {\n\t                    key = unicodeSyllable['kinzi'] + unicodeSyllable['anusvara'] + '_lig';\n\t                    if (this.spec['kinzi'][key] && this.spec['kinzi'][key].length) {\n\t                        syllable['kinzi'] = this.spec['kinzi'][key];\n\t                        delete syllable['anusvara'];\n\t                    }\n\t                }\n\t            }\n\t            // check for code points which may not have a direct mapping\n\t            if (unicodeSyllable['cons'] == 'ဉ') {\n\t                if (unicodeSyllable['asat']) {\n\t                    syllable['cons'] = this.spec['cons']['ဥ'];\n\t                } else if (unicodeSyllable['stack']) {\n\t                    syllable['cons'] = this.spec['cons']['ဉ_alt'];\n\t                } else if (unicodeSyllable['aVowel'] && this.spec['cons']['ဉာ_lig']) {\n\t                    syllable['cons'] = this.spec['cons']['ဉာ_lig'];\n\t                    delete syllable['aVowel'];\n\t                }\n\t                // this hatoh can occur with aVowel, so no else\n\t                if (unicodeSyllable['hatoh']) {\n\t                    syllable['hatoh'] = this.spec['hatoh']['ှ_small'];\n\t                }\n\t            } else if (unicodeSyllable['cons'] == 'ဠ') {\n\t                if (unicodeSyllable['hatoh']) {\n\t                    syllable['hatoh'] = this.spec['hatoh']['ှ_small'];\n\t                }\n\t            } else if (unicodeSyllable['cons'] == 'ဈ' && this.spec['cons']['ဈ'].length == 0) {\n\t                syllable['cons'] = this.spec['cons']['စ'];\n\t                syllable['yapin'] = this.spec['yapin']['ျ'];\n\t            } else if (unicodeSyllable['cons'] == 'ဩ' && this.spec['cons']['ဩ'].length == 0) {\n\t                syllable['cons'] = this.spec['cons']['သ'];\n\t                syllable['yayit'] = this.spec['yayit']['ြ_wide'];\n\t            } else if (unicodeSyllable['cons'] == 'ဪ' && this.spec['cons']['ဪ'].length == 0) {\n\t                syllable['cons'] = this.spec['သ'];\n\t                syllable['yayit'] = this.spec['ြ_wide'];\n\t                syllable['eVowel'] = this.spec['ေ'];\n\t                syllable['aVowel'] = this.spec['ာ'];\n\t                syllable['asat'] = this.spec['်'];\n\t            } else if (unicodeSyllable['cons'] == '၎င်း' && this.spec['cons']['၎င်း'].length == 0) {\n\t                if (this.spec['၎'].length) {\n\t                    syllable['cons'] = this.spec['cons']['၎'] + this.spec['cons']['င'] + this.spec['asat']['်'] + this.spec['visarga']['း'];\n\t                } else {\n\t                    syllable['cons'] = this.spec['number']['၄'] + this.spec['cons']['င'] + this.spec['asat']['်'] + this.spec['visarga']['း'];\n\t                }\n\t            } else if (unicodeSyllable['cons'] == 'န' || unicodeSyllable['cons'] == 'ည') {\n\t                if (unicodeSyllable['stack'] || unicodeSyllable['yapin'] || unicodeSyllable['wasway'] || unicodeSyllable['hatoh'] || unicodeSyllable['lVowel']) {\n\t                    syllable['cons'] = this.spec['cons'][unicodeSyllable['cons'] + '_alt'];\n\t                }\n\t            } else if (unicodeSyllable['cons'] == 'ရ') {\n\t                if (unicodeSyllable['yapin'] || unicodeSyllable['wasway'] || unicodeSyllable['lVowel']) {\n\t                    syllable['cons'] = this.spec['cons'][unicodeSyllable['cons'] + '_alt'];\n\t                } else if (unicodeSyllable['hatoh'] && this.spec['cons'][unicodeSyllable['cons'] + '_tall'].length) {\n\t                    syllable['cons'] = this.spec['cons'][unicodeSyllable['cons'] + '_tall'];\n\t                }\n\t            } else if (unicodeSyllable['cons'] == 'ဦ') {\n\t                if (this.spec['cons']['ဦ'].length == 0) {\n\t                    syllable['cons'] = this.spec['cons']['ဥ'];\n\t                    syllable['uVowel'] = this.spec['uVowel']['ီ'];\n\t                }\n\t            }\n\t            // stack with narrow upper cons\n\t            if ((unicodeSyllable['cons'] == 'ခ' || unicodeSyllable['cons'] == 'ဂ' || unicodeSyllable['cons'] == 'င' || unicodeSyllable['cons'] == 'စ' || unicodeSyllable['cons'] == 'ဎ' || unicodeSyllable['cons'] == 'ဒ' || unicodeSyllable['cons'] == 'ဓ' || unicodeSyllable['cons'] == 'န' || unicodeSyllable['cons'] == 'ပ' || unicodeSyllable['cons'] == 'ဖ' || unicodeSyllable['cons'] == 'ဗ' || unicodeSyllable['cons'] == 'မ' || unicodeSyllable['cons'] == 'ဝ') && unicodeSyllable['stack'] && this.spec['stack'][unicodeSyllable['stack'] + '_narrow'] && this.spec['stack'][unicodeSyllable['stack'] + '_narrow'].length > 0) {\n\t                syllable['stack'] = this.spec['stack'][unicodeSyllable['stack'] + '_narrow'];\n\t            }\n\t            // yapin variants\n\t            if (unicodeSyllable['yapin'] && (unicodeSyllable['wasway'] || unicodeSyllable['hatoh'])) {\n\t                if (this.spec['yapin']['ျ_alt'].length) {\n\t                    syllable['yapin'] = this.spec['yapin']['ျ_alt'];\n\t                } else // assume we have the ligatures\n\t                    {\n\t                        key = 'ျ' + (unicodeSyllable['wasway'] ? 'ွ' : '') + (unicodeSyllable['hatoh'] ? 'ှ' : '') + '_lig';\n\t                        if (this.spec['yapin'][key]) {\n\t                            syllable['yapin'] = this.spec['yapin'][key];\n\t                            if (unicodeSyllable['wasway']) {\n\t                                delete syllable['wasway'];\n\t                            }\n\t                            if (unicodeSyllable['hatoh']) {\n\t                                delete syllable['hatoh'];\n\t                            }\n\t                        } else {\n\t                            _utils.console.log(key + ' not found');\n\t                        }\n\t                    }\n\t            }\n\t            if (unicodeSyllable['yayit']) {\n\t                var widthVariant = '_wide';\n\t                var upperVariant = '';\n\t                if (unicodeSyllable['cons'] == 'ခ' || unicodeSyllable['cons'] == 'ဂ' || unicodeSyllable['cons'] == 'င' || unicodeSyllable['cons'] == 'စ' || unicodeSyllable['cons'] == 'ဎ' || unicodeSyllable['cons'] == 'ဒ' || unicodeSyllable['cons'] == 'ဓ' || unicodeSyllable['cons'] == 'န' || unicodeSyllable['cons'] == 'ပ' || unicodeSyllable['cons'] == 'ဖ' || unicodeSyllable['cons'] == 'ဗ' || unicodeSyllable['cons'] == 'မ' || unicodeSyllable['cons'] == 'ဝ') {\n\t                    widthVariant = '_narrow';\n\t                }\n\t                if (unicodeSyllable['uVowel'] || unicodeSyllable['kinzi'] || unicodeSyllable['anusvara']) {\n\t                    upperVariant = '_upper';\n\t                }\n\t                if (unicodeSyllable['wasway']) {\n\t                    if (unicodeSyllable['hatoh']) {\n\t                        if (this.spec['wasway']['ွှ_small'].length) {\n\t                            if (this.spec['yayit']['ြ' + upperVariant + widthVariant].length) {\n\t                                syllable['yayit'] = this.spec['yayit']['ြ' + upperVariant + widthVariant];\n\t                            } else {\n\t                                if (widthVariant == '_narrow') {\n\t                                    widthVariant = '';\n\t                                }\n\t                                syllable['yayit'] = this.spec['yayit']['ြ' + widthVariant];\n\t                            }\n\t                            syllable['wasway'] = this.spec['wasway']['ွှ_small'];\n\t                            delete syllable['hatoh'];\n\t                        } else if (this.spec['yayit']['ြ_lower' + widthVariant].length) {\n\t                            if (this.spec['yayit']['ြ_lower' + upperVariant + widthVariant].length) {\n\t                                syllable['yayit'] = this.spec['yayit']['ြ_lower' + upperVariant + widthVariant];\n\t                            } else {\n\t                                syllable['yayit'] = this.spec['yayit']['ြ_lower' + widthVariant];\n\t                            }\n\t                        }\n\t                    } else if (this.spec['yayit']['ြွ' + upperVariant + widthVariant].length) {\n\t                        syllable['yayit'] = this.spec['yayit']['ြွ' + upperVariant + widthVariant];\n\t                        delete syllable['wasway'];\n\t                    } else if (this.spec['yayit']['ြွ' + widthVariant].length) {\n\t                        syllable['yayit'] = this.spec['yayit']['ြွ' + widthVariant];\n\t                        delete syllable['wasway'];\n\t                    } else if (this.spec['yayit']['ြ_lower_wide'].length) {\n\t                        if (this.spec['yayit']['ြ' + '_lower' + upperVariant + widthVariant].length) {\n\t                            syllable['yayit'] = this.spec['yayit']['ြ' + '_lower' + upperVariant + widthVariant];\n\t                        } else {\n\t                            syllable['yayit'] = this.spec['yayit']['ြ' + '_lower' + widthVariant];\n\t                        }\n\t                    }\n\t                } else if (unicodeSyllable['hatoh']) {\n\t                    if (upperVariant.length == 0 && widthVariant == '_narrow') {\n\t                        widthVariant = '';\n\t                    }\n\t                    if (this.spec['yayit']['ြ' + upperVariant + widthVariant].length) {\n\t                        syllable['yayit'] = this.spec['yayit']['ြ' + upperVariant + widthVariant];\n\t                    } else if (this.spec['yayit']['ြ' + widthVariant].length) {\n\t                        syllable['yayit'] = this.spec['yayit']['ြ' + widthVariant];\n\t                    } else {\n\t                        syllable['yayit'] = this.spec['yayit']['ြ'];\n\t                    }\n\t                    syllable['hatoh'] = this.spec['hatoh']['ှ_small'];\n\t                } else if (unicodeSyllable['lVowel'] == 'ု' && this.spec['yayit']['ြု_wide']) {\n\t                    if (syllable['uVowel'] == this.spec['uVowel']['ိ'] && this.spec['yayit']['ြို' + widthVariant]) {\n\t                        syllable['yayit'] = this.spec['yayit']['ြို' + widthVariant];\n\t                        delete syllable['uVowel'];\n\t                    } else {\n\t                        if (this.spec['yayit']['ြု' + upperVariant + widthVariant].length) {\n\t                            syllable['yayit'] = this.spec['yayit']['ြု' + upperVariant + widthVariant];\n\t                        } else {\n\t                            syllable['yayit'] = this.spec['yayit']['ြု' + widthVariant];\n\t                        }\n\t                    }\n\t                    delete syllable['lVowel'];\n\t                } else {\n\t                    if (upperVariant.length == 0 && widthVariant == '_narrow') {\n\t                        widthVariant = '';\n\t                    }\n\t                    syllable['yayit'] = this.spec['yayit']['ြ' + upperVariant + widthVariant];\n\t                }\n\t            }\n\t            if (syllable['wasway'] && syllable['hatoh']) {\n\t                delete syllable['hatoh'];\n\t                syllable['wasway'] = this.spec['wasway']['ွှ_lig'];\n\t            }\n\t            if (syllable['hatoh'] && syllable['lVowel'] && !syllable['yapin'] && !syllable['yayit']) {\n\t                syllable['hatoh'] = this.spec['hatoh']['ှ' + unicodeSyllable['lVowel'] + '_lig'];\n\t                delete syllable['lVowel'];\n\t            }\n\t            if (syllable['uVowel'] && unicodeSyllable['uVowel'] == 'ိ' && syllable['anusvara'] && unicodeSyllable['anusvara'] == 'ံ') {\n\t                syllable['uVowel'] = this.spec['uVowel']['ိံ_lig'];\n\t                delete syllable['anusvara'];\n\t            }\n\t            if (syllable['lVowel'] && (unicodeSyllable['yayit'] || unicodeSyllable['yapin'] || unicodeSyllable['wasway'] || unicodeSyllable['hatoh'] || unicodeSyllable['lig'] || unicodeSyllable['stack'] || unicodeSyllable['cons'] == 'ဍ' || unicodeSyllable['cons'] == 'ဋ' || unicodeSyllable['cons'] == 'ဌ' || unicodeSyllable['cons'] == 'ဈ' || unicodeSyllable['cons'] == 'ဥ' || unicodeSyllable['cons'] == 'ဠ')) {\n\t                syllable['lVowel'] = this.spec['lVowel'][unicodeSyllable['lVowel'] + '_tall'];\n\t            }\n\t            if (unicodeSyllable['aVowel'] && unicodeSyllable['asat'] && unicodeSyllable['aVowel'] == 'ါ') {\n\t                syllable['aVowel'] = this.spec['aVowel']['ါ်_lig'];\n\t                delete syllable['asat'];\n\t            }\n\t            if (unicodeSyllable['lDot'] && (unicodeSyllable['aVowel'] || !(unicodeSyllable['yayit'] || unicodeSyllable['lig'] || unicodeSyllable['stack'] || unicodeSyllable['yapin'] || unicodeSyllable['wasway'] || unicodeSyllable['hatoh'] || unicodeSyllable['lVowel'] || unicodeSyllable['cons'] == 'ဍ' || unicodeSyllable['cons'] == 'ဋ' || unicodeSyllable['cons'] == 'ဌ' || unicodeSyllable['cons'] == 'ဈ' || unicodeSyllable['cons'] == 'ရ'))) {\n\t                if (unicodeSyllable['cons'] == 'န') {\n\t                    syllable['lDot'] = this.spec['lDot']['့_alt'];\n\t                } else {\n\t                    syllable['lDot'] = this.spec['lDot']['့_left'];\n\t                }\n\t            }\n\t            if (unicodeSyllable['lDot'] && !syllable['yayit'] && !(unicodeSyllable['cons'] == 'ရ') && (syllable['hatoh'] && syllable['hatoh'].length == 1 && !syllable['lVowel'] || syllable['lVowel'] && syllable['lVowel'] == this.spec['lVowel']['ု'])) {\n\t                syllable['lDot'] = this.spec['lDot']['့_alt'];\n\t            }\n\t            if (syllable['asat']) {\n\t                if (!syllable['eVowel'] && (syllable['yayit'] || syllable['yapin'] || syllable['wasway'] || syllable['lVowel'])) {\n\t                    syllable['contraction'] = syllable['asat'];\n\t                    delete syllable['asat'];\n\t                }\n\t            }\n\t            var outputOrder = ['eVowel', 'yayit', 'lig', 'cons', 'stack', 'contraction', 'yapin', 'kinzi', 'wasway', 'hatoh', 'uVowel', 'lVowel', 'anusvara', 'aVowel', 'asat', 'lDot', 'visarga'];\n\t            var outputText = '';\n\t            for (var i = 0; i < outputOrder.length; i++) {\n\t                if (syllable[outputOrder[i]]) {\n\t                    outputText += syllable[outputOrder[i]];\n\t                }\n\t            }\n\t            return outputText;\n\t        }\n\t    }, {\n\t        key: 'matchFrequency',\n\t\n\t        /**\n\t         * Compute the frequency of characters matching a Myanmar syllable\n\t         * compared to the number of characters in the code point range of the conv.\n\t         * @param inputText to match against\n\t         * @param isUnicode true to match with genuine Unicode pattern, false to match legacy\n\t         */\n\t        value: function matchFrequency(inputText, isUnicode) {\n\t            var re = this.legacyPattern;\n\t            var retValue = {};\n\t            retValue.syllables = [];\n\t            if (isUnicode) {\n\t                var utn11 = new TlsMyanmarUtn11();\n\t                re = utn11.pattern;\n\t            }\n\t            var legacyRange = '[' + String.fromCharCode(this.minCodePoint) + '-' + String.fromCharCode(this.maxCodePoint) + ']+';\n\t            //console.log(legacyRange + \" \" + this.minCodePoint + \" \" + this.maxCodePoint);\n\t            var codeRange = isUnicode ? new RegExp('[က-႟ꩠ-ꩻ]+', 'g') : new RegExp(legacyRange, 'g');\n\t            re.lastIndex = 0;\n\t            var pos = 0;\n\t            var matchCharCount = 0;\n\t            var nonMyanmarCount = 0;\n\t            var match = re.exec(inputText);\n\t            while (match) {\n\t                var nonMatched = inputText.substring(pos, match.index);\n\t                if (nonMatched.length) {\n\t                    retValue.syllables.push(nonMatched);\n\t                }\n\t                var strippedNonMatched = nonMatched.replace(codeRange, '');\n\t                nonMyanmarCount += strippedNonMatched.length;\n\t                pos = re.lastIndex;\n\t                retValue.syllables.push(match[0]);\n\t                matchCharCount += match[0].length;\n\t                match = re.exec(inputText);\n\t            }\n\t            if (pos != inputText.length) {\n\t                nonMatched = inputText.substring(pos, inputText.length);\n\t                strippedNonMatched = nonMatched.replace(codeRange, '');\n\t                nonMyanmarCount += strippedNonMatched.length;\n\t                retValue.syllables.push(nonMatched);\n\t            }\n\t            var freq = matchCharCount ? matchCharCount / (inputText.length - nonMyanmarCount) : 0;\n\t            _utils.console.log('match uni=' + isUnicode + ' freq=' + freq + ' match count=' + matchCharCount + ' unmatched=' + (inputText.length - nonMyanmarCount - matchCharCount) + ' length=' + inputText.length);\n\t            retValue.freq = freq;\n\t            return retValue;\n\t        }\n\t    }, {\n\t        key: 'getFontFamily',\n\t        value: function getFontFamily(isUnicode) {\n\t            return isUnicode ? '\\'Padauk\\',\\'ThanLwin\\',\\'Myanmar3\\',\\'Parabaik\\'' : this.fontFamily;\n\t        }\n\t    }, {\n\t        key: 'isPseudoUnicode',\n\t        value: function isPseudoUnicode() {\n\t            return this.minCodePoint == 0x1000;\n\t        }\n\t    }], [{\n\t        key: 'sortLongestFirst',\n\t\n\t        /**\n\t         * @internal\n\t         */\n\t        value: function sortLongestFirst(a, b) {\n\t            if (a.length > b.length) {\n\t                return -1;\n\t            } else if (a.length < b.length) {\n\t                return 1;\n\t            } else if (a < b) {\n\t                return -1;\n\t            } else if (a > b) {\n\t                return 1;\n\t            }\n\t            return 0;\n\t        }\n\t    }]);\n\t\n\t    return Converter;\n\t})();\n\t\n\tvar TlsMyanmarUtn11 = (function () {\n\t    function TlsMyanmarUtn11() {\n\t        _classCallCheck(this, TlsMyanmarUtn11);\n\t\n\t        this.kinzi = '((င|ရ|ၚ)်္)?'; //1\n\t        this.cons = '(က|ခ|ဂ|ဃ|င|စ|ဆ|ဇ|ဈ|ဉ|ည|ဋ|ဌ|ဍ|ဎ|ဏ|တ|ထ|ဒ|ဓ|န|ပ|ဖ|ဗ|ဘ|မ|ယ|ရ|လ|ဝ|သ|ဟ|ဠ|အ|ဣ|ဤ|ဥ|ဦ|ဧ|ဩ|ဪ|ဿ|၀|၁|၂|၃|၄|၅|၆|၇|၈|၉|၌|၍|၎|၏|ၐ|ၑ|ၒ|ၓ|ၔ|ၕ|ၚ|ၛ|ၜ|ၝ|ၡ|ၥ|ၦ|ၮ|ၯ|ၰ|ၵ|ၶ|ၷ|ၸ|ၹ|ၺ|ၻ|ၼ|ၽ|ၾ|ၿ|ႀ|ႁ|ႎ|႐|႑|႒|႓|႔|႕|႖|႗|႘|႙|႟|ꩠ|ꩡ|ꩢ|ꩣ|ꩤ|ꩥ|ꩦ|ꩧ|ꩨ|ꩩ|ꩪ|ꩫ|ꩬ|ꩭ|ꩮ|ꩯ|ꩱ|ꩲ|ꩳ|ꩴ|ꩵ|ꩶ|꩷|꩸|꩹|ꩺ)'; //3\n\t        this.stack = '(္(က|ခ|ဂ|ဃ|င|စ|ဆ|ဇ|ဈ|ဉ|ည|ဋ|ဌ|ဍ|ဎ|ဏ|တ|ထ|ဒ|ဓ|န|ပ|ဖ|ဗ|ဘ|မ|ယ|ရ|လ|ဝ|သ|ဟ|ဠ|အ|ၚ|ၛ|ၜ|ၝ)){0,2}'; //4\n\t        this.asat = '(်)?'; //6,11,22\n\t        this.medialY = '(ျ|ၞ|ၟ)?'; //7\n\t        this.medialR = '(ြ)?'; //8\n\t        this.medialW = '(ွ|ႂ)?'; //9\n\t        this.medialH = '(ှ|ၠ)?'; //10\n\t        // asat 11\n\t        this.eVowel = '(ေေ|ႄေ|ေ|ႄ)?'; //12\n\t        this.uVowel = '(ိ|ီ|ဲ|ဳ|ဴ|ဵ|ံ|ၱ|ၲ|ၳ|ၴ|ႅ|ႝ)?'; //13\n\t        this.lVowel = '(ု|ူ)?'; //14\n\t        this.karenVowel = '(ၢ|့)?'; //15\n\t        this.shanVowel = '(ႆ)?'; //16\n\t        this.aVowel = '(ါ|ာ|ၢ|ၣ|ၧ|ၨ|ႃ)?'; //17\n\t        this.anusvara = '(ဲ|ံ)?'; //18\n\t        this.pwoTone = '(ၤ|ၩ|ၪ|ၫ|ၬ|ၭ)?'; //19\n\t        this.lowerDot = '(့)?'; //20\n\t        this.monH = '(ှ)?'; //21\n\t        // asat 22\n\t        this.visarga = '(း|ႇ|ႈ|ႉ|ႊ|ႋ|ႌ|ႍ|ႏ|ႚ|ႛ|ႜ)?'; //23\n\t        this.redup = '(ႝꩰ)?'; //24\n\t        this.section = '(၊|။)?'; //25\n\t        this.pattern = new RegExp(this.kinzi + this.cons + this.stack + this.asat + this.medialY + this.medialR + this.medialW + this.medialH + this.asat + this.eVowel + this.uVowel + this.lVowel + this.karenVowel + this.shanVowel + this.aVowel + this.anusvara + this.pwoTone + this.lowerDot + this.monH + this.asat + this.visarga + this.redup + this.section, 'g');\n\t        return this;\n\t    }\n\t\n\t    _createClass(TlsMyanmarUtn11, [{\n\t        key: 'findSyllables',\n\t        value: function findSyllables(inputText) {\n\t            var syllables = [];\n\t            var pos = 0;\n\t            var match = this.pattern.exec(inputText);\n\t            while (match) {\n\t                var nonMatched = inputText.substring(pos, match.index);\n\t                if (nonMatched.length) {\n\t                    syllables.push(nonMatched);\n\t                }\n\t                pos = this.pattern.lastIndex;\n\t                // check for asat or virama and append to previous syllable\n\t                if (syllables.length && (match[1] != null || match[4] != null || match[6] != null || match[11] != null || match[22] != null || syllables[syllables.length - 1] == 'အ')) {\n\t                    var lastSyl = syllables.pop();\n\t                    lastSyl += match[0];\n\t                    syllables.push(lastSyl);\n\t                } else {\n\t                    syllables.push(match[0]);\n\t                }\n\t                match = this.pattern.exec(inputText);\n\t            }\n\t            if (pos != inputText.length) {\n\t                nonMatched = inputText.substring(pos, inputText.length);\n\t                syllables.push(nonMatched);\n\t            }\n\t            return syllables;\n\t        }\n\t    }]);\n\t\n\t    return TlsMyanmarUtn11;\n\t})();\n\t\n\t/** map to hold converters keyed by legacy encoding (font) name */\n\tvar converters = {};\n\texports.converters = converters;\n\tfor (var enc in _specs2['default']) {\n\t    var spec = _specs2['default'][enc];\n\t    _utils.console.log('Converter', enc, 'for', spec.fonts);\n\t    var conv = new Converter(spec);\n\t    for (var i = 0; i < spec.fonts.length; i++) {\n\t        var font = spec.fonts[i];\n\t        converters[font] = conv;\n\t        converters[font.toLowerCase()] = conv;\n\t    }\n\t}\n\t\n\tfunction convert(encSrc, encTgt, txtSrc) {\n\t    if (encSrc == encTgt || !txtSrc) {\n\t        // If encoding is identical or text is trivial, just pass it through\n\t        return txtSrc;\n\t    }\n\t    //console.log('src', encSrc, txtSrc);\n\t    if (encSrc == 'unicode') {\n\t        var txtUni = txtSrc;\n\t    } else {\n\t        var convSrc = converters[encSrc];\n\t        //console.log('convSrc:', convSrc);\n\t        txtUni = convSrc.convertToUnicode(txtSrc);\n\t    }\n\t    if (encTgt == 'unicode') {\n\t        var txtTgt = txtUni;\n\t    } else {\n\t        var convTgt = converters[encTgt];\n\t        //console.log('convTgt:', convTgt);\n\t        txtTgt = convTgt.convertFromUnicode(txtTgt);\n\t    }\n\t    //console.log('tgt', encTgt, txtTgt);\n\t    return txtTgt;\n\t}\n\t\n\t// should be safe to ignore, since the relative order is correct\n\n/***/ },\n/* 5 */,\n/* 6 */\n/***/ function(module, exports) {\n\n\t// Copyright (C) 2010 Keith Stribley http://www.ThanLwinSoft.org/\n\t// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n\t// License: GNU Lesser General Public License, version 2.1 or later.\n\t// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\t\n\t/**\n\t * Specifications of legacy Burmese encodings for use with the tls.converter.Converter class\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports[\"default\"] = {\n\t\n\t    \"zawgyi-one\": {\n\t        \"fonts\": [\"Zawgyi-One\"],\n\t        \"kinzi\": {\n\t            \"င်္\": \"ၤ\",\n\t            \"င်္ိ_lig\": \"ႋ\",\n\t            \"င်္ီ_lig\": \"ႌ\",\n\t            \"င်္ံ_lig\": \"ႍ\"\n\t        },\n\t        \"cons\": {\n\t            \"က\": \"က\",\n\t            \"ခ\": \"ခ\",\n\t            \"ဂ\": \"ဂ\",\n\t            \"ဃ\": \"ဃ\",\n\t            \"င\": \"င\",\n\t            \"စ\": \"စ\",\n\t            \"ဆ\": \"ဆ\",\n\t            \"ဇ\": \"ဇ\",\n\t            \"ဈ\": \"ဈ\",\n\t            \"ဉ\": \"ဉ\",\n\t            \"ဉ_alt\": \"ၪ\",\n\t            \"ည\": \"ည\",\n\t            \"ည_alt\": \"ၫ\",\n\t            \"ဋ\": \"ဋ\",\n\t            \"ဌ\": \"ဌ\",\n\t            \"ဍ\": \"ဍ\",\n\t            \"ဎ\": \"ဎ\",\n\t            \"ဏ\": \"ဏ\",\n\t            \"တ\": \"တ\",\n\t            \"ထ\": \"ထ\",\n\t            \"ဒ\": \"ဒ\",\n\t            \"ဓ\": \"ဓ\",\n\t            \"န\": \"န\",\n\t            \"န_alt\": \"ႏ\",\n\t            \"ပ\": \"ပ\",\n\t            \"ဖ\": \"ဖ\",\n\t            \"ဗ\": \"ဗ\",\n\t            \"ဘ\": \"ဘ\",\n\t            \"မ\": \"မ\",\n\t            \"ယ\": \"ယ\",\n\t            \"ရ\": \"ရ\",\n\t            \"ရ_alt\": \"႐\",\n\t            \"ရ_tall\": \"\",\n\t            \"လ\": \"လ\",\n\t            \"ဝ\": \"ဝ\",\n\t            \"သ\": \"သ\",\n\t            \"ဟ\": \"ဟ\",\n\t            \"ဠ\": \"ဠ\",\n\t            \"အ\": \"အ\",\n\t            \"ဣ\": \"ဣ\",\n\t            \"ဤ\": \"ဤ\",\n\t            \"ဥ\": \"ဥ\",\n\t            \"ဦ\": \"ဦ\",\n\t            \"ဧ\": \"ဧ\",\n\t            \"ဩ\": \"ဩ\",\n\t            \"ဪ\": \"ဪ\",\n\t            \"ဿ\": \"ႆ\",\n\t            \"၌\": \"၌\",\n\t            \"၍\": \"၍\",\n\t            \"၎\": \"\",\n\t            \"၎င်း\": \"၎\",\n\t            \"၏\": \"၏\",\n\t            \"၀\": \"၀\",\n\t            \"၁\": \"၁\",\n\t            \"၂\": \"၂\",\n\t            \"၃\": \"၃\",\n\t            \"၄\": \"၄\",\n\t            \"၅\": \"၅\",\n\t            \"၆\": \"၆\",\n\t            \"၇\": \"၇\",\n\t            \"၈\": \"၈\",\n\t            \"၉\": \"၉\",\n\t            \"။\": \"။\",\n\t            \"၊\": \"၊\"\n\t        },\n\t        \"lig\": {\n\t            \"ဍ္ဍ\": \"ၮ\",\n\t            \"ဍ္ဎ\": \"ၯ\",\n\t            \"ဏ္ဍ\": \"႑\",\n\t            \"ဋ္ဌ\": \"႒\",\n\t            \"ဋ္ဋ\": \"႗\"\n\t        },\n\t        \"stack\": {\n\t            \"္က\": \"ၠ\",\n\t            \"္ခ\": \"ၡ\",\n\t            \"္ဂ\": \"ၢ\",\n\t            \"္ဃ\": \"ၣ\",\n\t            \"္စ\": \"ၥ\",\n\t            \"္ဆ\": \"ၦ\",\n\t            \"္ဆ_narrow\": \"ၧ\",\n\t            \"္ဇ\": \"ၨ\",\n\t            \"္ဈ\": \"ၩ\",\n\t            \"္ဋ\": \"ၬ\",\n\t            \"္ဌ\": \"ၭ\",\n\t            \"္ဍ\": \"\",\n\t            \"္ဎ\": \"\",\n\t            \"္ဏ\": \"ၰ\",\n\t            \"္တ\": \"ၱ\",\n\t            \"္တ_narrow\": \"ၲ\",\n\t            \"္တွ\": \"႖\",\n\t            \"္ထ\": \"ၳ\",\n\t            \"္ထ_narrow\": \"ၴ\",\n\t            \"္ဒ\": \"ၵ\",\n\t            \"္ဓ\": \"ၶ\",\n\t            \"္န\": \"ၷ\",\n\t            \"္ပ\": \"ၸ\",\n\t            \"္ဖ\": \"ၹ\",\n\t            \"္ဗ\": \"ၺ\",\n\t            \"္ဘ\": \"ၻ\",\n\t            \"္မ\": \"ၼ\",\n\t            \"္ယ\": \"\",\n\t            \"္ရ\": \"\",\n\t            \"္လ\": \"ႅ\",\n\t            \"္သ\": \"\",\n\t            \"္အ\": \"\"\n\t        },\n\t        \"yapin\": {\n\t            \"ျ\": \"်\",\n\t            \"ျ_alt\": \"ၽ\",\n\t            \"ျွ_lig\": \"\",\n\t            \"ျှ_lig\": \"\",\n\t            \"ျွှ_lig\": \"\"\n\t        },\n\t        \"yayit\": {\n\t            \"ြ\": \"ျ\",\n\t            \"ြ_wide\": \"ၾ\",\n\t            \"ြ_upper_narrow\": \"ၿ\",\n\t            \"ြ_upper_wide\": \"ႀ\",\n\t            \"ြ_lower_narrow\": \"ႁ\",\n\t            \"ြ_lower_wide\": \"ႂ\",\n\t            \"ြ_lower_upper_narrow\": \"ႃ\",\n\t            \"ြ_lower_upper_wide\": \"ႄ\",\n\t            \"ြွ_narrow\": \"\",\n\t            \"ြွ_wide\": \"\",\n\t            \"ြွ_upper_narrow\": \"\",\n\t            \"ြွ_upper_wide\": \"\",\n\t            \"ြု_narrow\": \"\",\n\t            \"ြု_wide\": \"\",\n\t            \"ြု_upper_narrow\": \"\",\n\t            \"ြု_upper_wide\": \"\"\n\t        },\n\t        \"wasway\": {\n\t            \"ွ\": \"ြ\",\n\t            \"ွှ_lig\": \"ႊ\",\n\t            \"ွှ_small\": \"\"\n\t        },\n\t        \"hatoh\": {\n\t            \"ှ\": \"ွ\",\n\t            \"ှ_small\": \"ႇ\",\n\t            \"ှု_lig\": \"ႈ\",\n\t            \"ှူ_lig\": \"ႉ\"\n\t        },\n\t        \"eVowel\": {\n\t            \"ေ\": \"ေ\"\n\t        },\n\t        \"uVowel\": {\n\t            \"ိ\": \"ိ\",\n\t            \"ိံ_lig\": \"ႎ\",\n\t            \"ီ\": \"ီ\"\n\t        },\n\t        \"lVowel\": {\n\t            \"ု\": \"ု\",\n\t            \"ု_tall\": \"ဳ\",\n\t            \"ူ\": \"ူ\",\n\t            \"ူ_tall\": \"ဴ\"\n\t        },\n\t        \"anusvara\": {\n\t            \"ံ\": \"ံ\",\n\t            \"ဲ\": \"ဲ\"\n\t        },\n\t        \"aVowel\": {\n\t            \"ါ\": \"ါ\",\n\t            \"ါ်_lig\": \"ၚ\",\n\t            \"ာ\": \"ာ\"\n\t        },\n\t        \"lDot\": {\n\t            \"့\": \"႕\",\n\t            \"့_alt\": \"႔\",\n\t            \"့_left\": \"့\",\n\t            \"့_spaceDot\": \" ့\",\n\t            \"့_spaceDotAlt\": \" ႔\"\n\t        },\n\t        \"asat\": {\n\t            \"်\": \"္\"\n\t        },\n\t        \"visarga\": {\n\t            \"း\": \"း\"\n\t        }\n\t    },\n\t\n\t    \"wininnwa\": {\n\t        \"fonts\": [\"Wininnwa\", \"Win Researcher\", \"Win Innwa\", \"Win   Innwa\", \"Win---Innwa\", \"Win---Researcher\"],\n\t        \"kinzi\": {\n\t            \"င်္\": \"F\",\n\t            \"င်္ိ_lig\": \"Ø\",\n\t            \"င်္ီ_lig\": \"Ð\",\n\t            \"င်္ံ_lig\": \"ø\"\n\t        },\n\t        \"cons\": {\n\t            \"က\": \"u\",\n\t            \"ခ\": \"c\",\n\t            \"ဂ\": \"*\",\n\t            \"ဃ\": \"C\",\n\t            \"င\": \"i\",\n\t            \"စ\": \"p\",\n\t            \"ဆ\": \"q\",\n\t            \"ဇ\": \"Z\",\n\t            \"ဈ\": \"ps\",\n\t            \"ဉ\": \"Ú\",\n\t            \"ဉ_alt\": \"Í\",\n\t            \"ဉာ_lig\": \"Ó\",\n\t            \"ည\": \"n\",\n\t            \"ည_alt\": \"ñ\",\n\t            \"ဋ\": \"#\",\n\t            \"ဌ\": \"X\",\n\t            \"ဍ\": \"!\",\n\t            \"ဎ\": \"¡\",\n\t            \"ဏ\": \"P\",\n\t            \"တ\": \"w\",\n\t            \"ထ\": \"x\",\n\t            \"ဒ\": \"'\",\n\t            \"ဓ\": \"\\\"\",\n\t            \"န\": \"e\",\n\t            \"န_alt\": \"E\",\n\t            \"ပ\": \"y\",\n\t            \"ဖ\": \"z\",\n\t            \"ဗ\": \"A\",\n\t            \"ဘ\": \"b\",\n\t            \"မ\": \"r\",\n\t            \"ယ\": \",\",\n\t            \"ရ\": \"&\",\n\t            \"ရ_alt\": \"½\",\n\t            \"ရ_tall\": \"\",\n\t            \"လ\": \"v\",\n\t            \"ဝ\": \"0\",\n\t            \"သ\": \"o\",\n\t            \"ဟ\": \"[\",\n\t            \"ဠ\": \"V\",\n\t            \"အ\": \"t\",\n\t            \"ဣ\": \"£\",\n\t            \"ဤ\": \"þ\",\n\t            \"ဥ\": \"O\",\n\t            \"ဦ\": \"OD\",\n\t            \"ဧ\": \"{\",\n\t            \"ဩ\": \"Mo\",\n\t            \"ဪ\": \"aMomf\",\n\t            \"ဿ\": \"ó\",\n\t            \"၌\": \"ü\",\n\t            \"၍\": \"í\",\n\t            \"၎\": \"¤\",\n\t            \"၎င်း\": \"\",\n\t            \"၏\": \"\\\\\",\n\t            \"၀\": \"0\",\n\t            \"၁\": \"1\",\n\t            \"၂\": \"2\",\n\t            \"၃\": \"3\",\n\t            \"၄\": \"4\",\n\t            \"၅\": \"5\",\n\t            \"၆\": \"6\",\n\t            \"၇\": \"7\",\n\t            \"၈\": \"8\",\n\t            \"၉\": \"9\",\n\t            \"။\": \"/\",\n\t            \"၊\": \"?\"\n\t        },\n\t        \"lig\": {\n\t            \"ဍ္ဍ\": \"×\",\n\t            \"ဍ္ဎ\": \"¹\",\n\t            \"ဏ္ဍ\": \"@\",\n\t            \"ဋ္ဌ\": \"|\",\n\t            \"ဋ္ဋ\": \"¥\",\n\t            \"ကျပ်\": \"$\"\n\t        },\n\t        \"stack\": {\n\t            \"္က\": \"ú\",\n\t            \"္ခ\": \"©\",\n\t            \"္ဂ\": \"¾\",\n\t            \"္ဃ\": \"¢\",\n\t            \"္စ\": \"ö\",\n\t            \"္ဆ\": \"ä\",\n\t            \"္ဆ_narrow\": \"\",\n\t            \"္ဇ\": \"Æ\",\n\t            \"္ဈ\": \"Ñ\",\n\t            \"္ဋ\": \"³\",\n\t            \"္ဌ\": \"²\",\n\t            \"္ဍ\": \"\",\n\t            \"္ဎ\": \"\",\n\t            \"္ဏ\": \"Ö\",\n\t            \"္တ\": \"å\",\n\t            \"္တ_narrow\": \"Å\",\n\t            \"္တွ\": \"É\",\n\t            \"္ထ\": \"¬\",\n\t            \"္ထ_narrow\": \"¦\",\n\t            \"္ဒ\": \"´\",\n\t            \"္ဓ\": \"¨\",\n\t            \"္န\": \"é\",\n\t            \"္ပ\": \"Ü\",\n\t            \"္ဖ\": \"æ\",\n\t            \"္ဗ\": \"Á\",\n\t            \"္ဘ\": \"Ç\",\n\t            \"္မ\": \"®\",\n\t            \"္ယ\": \"\",\n\t            \"္ရ\": \"\",\n\t            \"္လ\": \"’\",\n\t            \"္သ\": \"\",\n\t            \"္အ\": \"\"\n\t        },\n\t        \"yapin\": {\n\t            \"ျ\": \"s\",\n\t            \"ျ_alt\": \"ß\",\n\t            \"ျွ_lig\": \"R\",\n\t            \"ျှ_lig\": \"Q\",\n\t            \"ျွှ_lig\": \"W\"\n\t        },\n\t        \"yayit\": {\n\t            \"ြ\": \"j\",\n\t            \"ြ_wide\": \"M\",\n\t            \"ြ_upper_narrow\": \"N\",\n\t            \"ြ_upper_wide\": \"B\",\n\t            \"ြ_lower_narrow\": \"`\",\n\t            \"ြ_lower_wide\": \"~\",\n\t            \"ြ_lower_upper_narrow\": \"\",\n\t            \"ြ_lower_upper_wide\": \"\",\n\t            \"ြွ_narrow\": \">\",\n\t            \"ြွ_wide\": \"<\",\n\t            \"ြွ_upper_narrow\": \"\",\n\t            \"ြွ_upper_wide\": \"\",\n\t            \"ြု_narrow\": \"û\",\n\t            \"ြု_wide\": \"ê\",\n\t            \"ြု_upper_narrow\": \"\",\n\t            \"ြု_upper_wide\": \"\"\n\t        },\n\t        \"wasway\": {\n\t            \"ွ\": \"G\",\n\t            \"ွှ_lig\": \"T\",\n\t            \"ွှ_small\": \"\"\n\t        },\n\t        \"hatoh\": {\n\t            \"ှ\": \"S\",\n\t            \"ှ_small\": \"§\",\n\t            \"ှု_lig\": \"I\",\n\t            \"ှူ_lig\": \"ª\"\n\t        },\n\t        \"eVowel\": {\n\t            \"ေ\": \"a\"\n\t        },\n\t        \"uVowel\": {\n\t            \"ိ\": \"d\",\n\t            \"ိံ_lig\": \"ð\",\n\t            \"ီ\": \"D\"\n\t        },\n\t        \"lVowel\": {\n\t            \"ု\": \"k\",\n\t            \"ု_tall\": \"K\",\n\t            \"ူ\": \"l\",\n\t            \"ူ_tall\": \"L\"\n\t        },\n\t        \"anusvara\": {\n\t            \"ံ\": \"H\",\n\t            \"ဲ\": \"J\"\n\t        },\n\t        \"aVowel\": {\n\t            \"ါ\": \"g\",\n\t            \"ါ်_lig\": \":\",\n\t            \"ာ\": \"m\"\n\t        },\n\t        \"lDot\": {\n\t            \"့\": \"U\",\n\t            \"့_alt\": \"Y\",\n\t            \"့_left\": \"h\"\n\t        },\n\t        \"asat\": {\n\t            \"်\": \"f\"\n\t        },\n\t        \"visarga\": {\n\t            \"း\": \";\"\n\t        }\n\t    },\n\t\n\t    \"wwin_burmese1\": {\n\t        \"fonts\": [\"Wwin_Burmese1\", \"Wwin_Burmese\"],\n\t        \"kinzi\": {\n\t            \"င်္\": \"F\",\n\t            \"င်္ိ_lig\": \"õ\",\n\t            \"င်္ီ_lig\": \"ô\",\n\t            \"င်္ံ_lig\": \"ø\"\n\t        },\n\t        \"cons\": {\n\t            \"က\": \"u\",\n\t            \"ခ\": \"c\",\n\t            \"ဂ\": \"*\",\n\t            \"ဃ\": \"C\",\n\t            \"င\": \"i\",\n\t            \"စ\": \"p\",\n\t            \"ဆ\": \"q\",\n\t            \"ဇ\": \"Z\",\n\t            \"ဈ\": \"ps\",\n\t            \"ဉ\": \"^\",\n\t            \"ဉ_alt\": \"\",\n\t            \"ည\": \"n\",\n\t            \"ည_alt\": \"!\",\n\t            \"ဋ\": \"Ë\",\n\t            \"ဋ_alt\": \"É\",\n\t            \"ဌ\": \"X\",\n\t            \"ဍ\": \"È\",\n\t            \"ဎ\": \"Ê\",\n\t            \"ဏ\": \"%\",\n\t            \"တ\": \"w\",\n\t            \"ထ\": \"x\",\n\t            \"ဒ\": \"'\",\n\t            \"ဓ\": \"\\\"\",\n\t            \"န\": \"e\",\n\t            \"န_alt\": \"E\",\n\t            \"ပ\": \"y\",\n\t            \"ဖ\": \"z\",\n\t            \"ဗ\": \"A\",\n\t            \"ဘ\": \"b\",\n\t            \"မ\": \"r\",\n\t            \"ယ\": \",\",\n\t            \"ရ\": \"&\",\n\t            \"ရ_alt\": \"¶\",\n\t            \"ရ_tall\": \"±\",\n\t            \"လ\": \"v\",\n\t            \"ဝ\": \"ÿ\",\n\t            \"သ\": \"o\",\n\t            \"ဟ\": \"[\",\n\t            \"ဠ\": \"V\",\n\t            \"အ\": \"t\",\n\t            \"ဣ\": \"Á\",\n\t            \"ဤ\": \"T\",\n\t            \"ဥ\": \"O\",\n\t            \"ဦ\": \"OD\",\n\t            \"ဧ\": \"{\",\n\t            \"ဩ\": \"=o\",\n\t            \"ဪ\": \"a=omf\",\n\t            \"ဿ\": \"\\\\\",\n\t            \"၌\": \"Y\",\n\t            \"၍\": \"I\",\n\t            \"၎\": \"\",\n\t            \"၎င်း\": \"‚\",\n\t            \"၏\": \".\",\n\t            \"၀\": \"0\",\n\t            \"၁\": \"1\",\n\t            \"၂\": \"2\",\n\t            \"၃\": \"3\",\n\t            \"၄\": \"4\",\n\t            \"၅\": \"5\",\n\t            \"၆\": \"6\",\n\t            \"၇\": \"7\",\n\t            \"၈\": \"8\",\n\t            \"၉\": \"9\",\n\t            \"။\": \"?\",\n\t            \"၊\": \"/\"\n\t        },\n\t        \"lig\": {\n\t            \"ဍ္ဍ\": \"Ä\",\n\t            \"ဍ္ဎ\": \"Å\",\n\t            \"ဏ္ဍ\": \"¾\",\n\t            \"ဏ္ဌ\": \"¿\",\n\t            \"ဏ္ဏ\": \"À\",\n\t            \"ဏ္ဋ\": \"Â\",\n\t            \"ဋ္ဋ\": \"Ã\",\n\t            \"ဋ္ဌ\": \"Ï\",\n\t            \"ဉ္စ\": \"Ì\",\n\t            \"ဉ္ဇ\": \"Í\"\n\t        },\n\t        \"stack\": {\n\t            \"္က\": \"U\",\n\t            \"္ခ\": \"Q\",\n\t            \"္ဂ\": \"~\",\n\t            \"္ဃ\": \"ƒ\",\n\t            \"္စ\": \"P\",\n\t            \"္ဆ\": \">\",\n\t            \"္ဆ_narrow\": \"\",\n\t            \"္ဇ\": \"…\",\n\t            \"္ဇျ_lig\": \"Æ\",\n\t            \"္ဈ\": \"Æ\",\n\t            \"္ဋ\": \"\",\n\t            \"္ဌ\": \"\",\n\t            \"္ဍ\": \"\",\n\t            \"္ဎ\": \"„\",\n\t            \"္ဏ\": \"\",\n\t            \"္တ\": \"W\",\n\t            \"္တ_narrow\": \"©\",\n\t            \"္တ_narrow2\": \"œ\",\n\t            \"္တွ\": \"\",\n\t            \"္ထ\": \"ˆ\",\n\t            \"္ထ_narrow\": \"Î\",\n\t            \"္ဒ\": \"N\",\n\t            \"္ဓ\": \"<\",\n\t            \"္န\": \"M\",\n\t            \"္ပ\": \"`\",\n\t            \"္ဖ\": \"‰\",\n\t            \"္ဗ\": \"Š\",\n\t            \"္ဘ\": \"B\",\n\t            \"္မ\": \"R\",\n\t            \"္ယ\": \"\",\n\t            \"္ရ\": \"\",\n\t            \"္လ\": \"†\",\n\t            \"္သ\": \"\",\n\t            \"္အ\": \"\"\n\t        },\n\t        \"yapin\": {\n\t            \"ျ\": \"s\",\n\t            \"ျ_alt\": \"\",\n\t            \"ျွ_lig\": \"|\",\n\t            \"ျွ_alt\": \"í\",\n\t            \"ျှ_lig\": \"#\",\n\t            \"ျွှ_lig\": \"é\",\n\t            \"ျွှ_alt\": \"î\"\n\t        },\n\t        \"yayit\": {\n\t            \"ြ\": \"j\",\n\t            \"ြ_wide\": \"=\",\n\t            \"ြ_upper_narrow\": \"+\",\n\t            \"ြ_upper_wide\": \"}\",\n\t            \"ြ_lower_narrow\": \"\",\n\t            \"ြ_lower_wide\": \"\",\n\t            \"ြ_lower_upper_narrow\": \"\",\n\t            \"ြ_lower_upper_wide\": \"\",\n\t            \"ြွ_narrow\": \"¹\",\n\t            \"ြွ_wide\": \"º\",\n\t            \"ြွ_upper_narrow\": \"\",\n\t            \"ြွ_upper_wide\": \"\",\n\t            \"ြု_narrow\": \"ð\",\n\t            \"ြု_wide\": \"ñ\",\n\t            \"ြု_upper_narrow\": \"\",\n\t            \"ြု_upper_wide\": \"\",\n\t            \"ြို_narrow\": \"ò\",\n\t            \"ြို_wide\": \"ó\"\n\t        },\n\t        \"wasway\": {\n\t            \"ွ\": \"G\",\n\t            \"ွ_alt\": \"ë\",\n\t            \"ွှ_lig\": \"$\",\n\t            \"ွှ_small\": \"\",\n\t            \"ွှ_alt\": \"¸\",\n\t            \"ွှ_alt2\": \"ì\",\n\t            \"ွှ_alt3\": \"ï\"\n\t        },\n\t        \"hatoh\": {\n\t            \"ှ\": \"S\",\n\t            \"ှ_small\": \"‡\",\n\t            \"ှ_alt\": \"ê\",\n\t            \"ှု_lig\": \"_\",\n\t            \"ှူ_lig\": \"–\"\n\t        },\n\t        \"eVowel\": {\n\t            \"ေ\": \"a\"\n\t        },\n\t        \"uVowel\": {\n\t            \"ိ\": \"d\",\n\t            \"ိံ_lig\": \"ö\",\n\t            \"ီ\": \"D\"\n\t        },\n\t        \"lVowel\": {\n\t            \"ု\": \"k\",\n\t            \"ု_tall\": \"K\",\n\t            \"ူ\": \"l\",\n\t            \"ူ_tall\": \"L\"\n\t        },\n\t        \"anusvara\": {\n\t            \"ံ\": \"H\",\n\t            \"ဲ\": \"J\"\n\t        },\n\t        \"aVowel\": {\n\t            \"ါ\": \"g\",\n\t            \"ါ်_lig\": \":\",\n\t            \"ာ\": \"m\"\n\t        },\n\t        \"lDot\": {\n\t            \"့\": \"Œ\",\n\t            \"့_alt\": \"@\",\n\t            \"့_alt2\": \"‹\",\n\t            \"့_left\": \"h\",\n\t            \"့_left2\": \"•\",\n\t            \"့_left3\": \"›\"\n\t        },\n\t        \"asat\": {\n\t            \"်\": \"f\"\n\t        },\n\t        \"visarga\": {\n\t            \"း\": \";\"\n\t        }\n\t    }\n\t};\n\tmodule.exports = exports[\"default\"];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build/BothMM-min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ba6ec12a2ca9aeec81b7\n **/","// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n// License: GNU Lesser General Public License, version 2.1 or later.\n// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\nimport {convert} from './tls/converter';\nimport {console} from './utils';\n\n// Private state\n\nvar readyListeners = [];\nvar becListeners = [];\nvar aecListeners = [];\n\n\n/**\n * Library to allow Burmese-language web content to be authored in both Zawgyi-One and Unicode and to be viewed by users\n * whichever font/encoding they have configured in their browsers.\n *\n * It initially has a very limited set of members, until the library has properly initialised. Those members are\n * documented as such.\n */\nexport default class BothMM {\n\n    /**\n     * Call the passed-in function when the BothMM library is whenReady. This is guaranteed to also be after the DOM is\n     * initialised.\n     * @param f\n     */\n    static ready(f) {\n        if (readyListeners) {\n            readyListeners.push(f);\n        } else {\n            setTimeout(f, 0);\n        }\n    }\n\n    /**\n     * Tests whether a given font is installed in the user's browser.\n     * @param {string} font The name of the font to test for\n     * @returns {boolean} Whether the font is available\n     */\n    static hasFont(font) {\n        /* Works by constructing a <div/> with some text in the requested font,\n         * but either \"sans-serif\" or \"monospace\" as the backup font. If the font\n         * exists, the browser will use that font and both elements have the same\n         * width. If the font does not exist, the fallback fonts have very\n         * different widths. */\n\n        var node = document.createElement('div');\n        node.innerHTML = '<span style=\"position:absolute!important;width:auto!important;font-size:100px!important;left:-999px\">. . .</span>';\n        node = node.firstChild;\n\n        node.style.fontFamily = font + ', sans-serif';\n        document.body.appendChild(node);\n        var widthOrSans = node.clientWidth;\n        node.style.fontFamily = font + ', monospace';\n        var widthOrMono = node.clientWidth;\n        document.body.removeChild(node);\n\n        return widthOrSans == widthOrMono;\n    }\n\n    /**\n     * Register function to call before the encoding is changed.\n     * If the function throws an exception, then the change will be aborted. */\n    static beforeEncodingChange(f) {\n        becListeners.push(f)\n    }\n\n    /**\n     * Register function to call after the encoding has been changed.\n     * If the function throws an exception, then the change will be aborted. */\n    static afterEncodingChange(f) {\n        aecListeners.push(f)\n    }\n\n    /**\n     *  Set the target encoding and translate all discovered element.\n     *  @param {string=} encoding Change to this encoding or omit to refresh translation.\n     */\n    static setEncoding(encoding) {\n        if (encoding === undefined) {\n            encoding = BothMM.encoding;\n        }\n        var before = BothMM.encoding;\n        for (var i = 0; i < becListeners.length; i++) {\n            becListeners[i](before, encoding)\n        }\n        BothMM.encoding = encoding;\n        translateSub(\"off\", BothMM.roots);\n\n        setCookie('BothMM.encoding', encoding, '/');\n        for (i = 0; i < aecListeners.length; i++) {\n            try {\n                aecListeners[i](before, encoding)\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\n/**\n * The library version according to <a href=\"http://semver.org/\">semver</a> semantics.\n *\n * This member is available during initialisation.\n */\nBothMM.VERSION = \"0.0.1\";\n\n\n/**\n * The DOM elements to translate. Defaults to anything with a [both-mm] attribute,\n * unless it is nested within another such element. */\nBothMM.roots = [];\n\n\n/**\n * Re-export the convert function\n * @type {convert}\n */\nBothMM.convert = convert;\n\n///////////////////////////////////////////////////////////////////\n// Utility functions\n\n/**\n * Find all nodes on page with a given attribute\n *\n * @param {string} an\n * @returns {Array<Element> | NodeList}\n */\nfunction findWithAttr(an) {\n    if (typeof(document.querySelectorAll) == \"function\") {\n        return document.querySelectorAll(\"[\" + an + \"]\");\n    } else {\n        var all = document.getElementsByTagName(\"*\");\n        var marked = [];\n        for (var i = 0; i < all.length; i++) {\n            if (all[i].getAttribute(an)) {\n                marked.push(all[i]);\n            }\n        }\n    }\n    return marked;\n}\n\n/**\n * Filters a list of Nodes, discarding the ones with an ancestor having a particular attribute\n * @param {string} an\n * @param {Array<Element> | NodeList} elms\n * @returns {Array<Element>}\n */\nfunction discardIfAncestorAttr(an, elms) {\n    var good = [];\n    for (var i = 0; i < elms.length; i++) {\n        var elm = elms[i];\n        for (var p = elm.parentNode; p && p.getAttribute; p = p.parentNode) {\n            //console.log('>', p);\n            if (p.getAttribute(an)) {\n                elm = null;\n            }\n        }\n        if (elm) {\n            good.push(elm);\n        }\n    }\n    return good;\n}\n\n/**\n * Recursively translate a list of elements.\n *\n * @param encSrc Encoding source inherited from parents. This may be overridden in children.\n * @param elms List of elements to translate.\n */\nfunction translateSub(encSrc, elms) {\n    var encTgt = BothMM.encoding;\n    for (var i = 0; i < elms.length; i++) {\n        var elm = elms[i];\n\n        if (elm.nodeType == 3) {\n            // It's a text node, so let's do some actual text conversion\n            if (!elm.__raw) {\n                // TODO: Brittle\n                elm.__raw = elm.nodeValue;\n            }\n            elm.nodeValue = convert(encSrc, encTgt, elm.__raw);\n        } else {\n            // No text here. Update settings and recurse\n            var encSrcSel = elm.getAttribute(\"both-mm\") || encSrc;\n            var encTgtEff = (encSrcSel == \"off\") ? \"off\" : (encTgt != encSrcSel) ? encTgt : \"off\";\n            //console.log(encSrc, encSrcSel, \"->\", encTgt, encTgtEff, elm);\n            elm.setAttribute(\"both-mm-now\", encTgtEff);\n            translateSub(encSrcSel, elm.childNodes);\n        }\n    }\n}\n\nfunction getCookie(key) {\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n}\n\nfunction setCookie(key, value, path) {\n    document.cookie = encodeURIComponent(key) + \"=\" + encodeURIComponent(value) + \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" + (path ? \"; path=\" + path : \"\");\n}\n\n// INITIALISE WHEN DOM IS READY\n\n/** Initialise BothMM state when DOM is whenReady. */\nfunction onDomReady() {\n\n    /**\n     * Whether the Zawgyi-One font is available in the user's browser.\n     * @type {bool}\n     */\n    BothMM.zawgyiOneFont = BothMM.hasFont('Zawgyi-One');\n\n    /**\n     * Translate elements to use this presentation.\n     * @type {string} (zawgyi-one|unicode|off)\n     */\n    BothMM.encoding = getCookie('BothMM.encoding') || 'unicode';\n\n    BothMM.roots = discardIfAncestorAttr(\"both-mm\", findWithAttr(\"both-mm\"));\n    console.log('BothMM.roots discovered:', BothMM.roots.length);\n    for (let root of BothMM.roots) {\n        console.log('  ', root);\n    }\n\n    // Translate all the discovered elements\n    BothMM.setEncoding();\n\n    // Change the encoding when any element with the \"both-mm-select\" attribute is clicked\n    var selectors = findWithAttr(\"both-mm-select\");\n    for (var i = 0; i < selectors.length; i++) {\n        selectors[i].addEventListener('click', function (evt) {\n            var encoding = evt.target.getAttribute(\"both-mm-select\");\n            BothMM.setEncoding(encoding);\n        });\n    }\n\n    // Notify listeners that we are ready\n    for (let listener of readyListeners) {\n        try {\n            listener();\n        } catch (e) {\n            console.error(e);\n        }\n    }\n    readyListeners = undefined;\n}\n\n(function ready() {\n    if (document.readyState === \"complete\") {\n        setTimeout(onDomReady, 1);\n    } else if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', onDomReady);\n    } else {\n        setTimeout(ready, 20);\n    }\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","// Ensure that console.log and console.error don't cause errors\nexport var console = window.console || {};\nconsole.log = console.log || (() => {\n    });\nconsole.error = console.error || console.log;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","// Copyright (C) 2010 Keith Stribley http://www.ThanLwinSoft.org/\n// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n// License: GNU Lesser General Public License, version 2.1 or later.\n// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\nimport {console} from '../utils';\nimport specs from './specs';\n\n\n// Static tables other than the encoding specs\n\nvar UNICODE_SEQUENCE = [\n    \"kinzi\", null, \"lig\", null, \"cons\", \"stack\", \"asat\", \"yapin\", \"yayit\", \"wasway\", \"hatoh\", \"eVowel\", \"uVowel\",\n    \"lVowel\", \"anusvara\", \"aVowel\", \"lDot\", \"asat\", \"lDot\", \"visarga\"\n];\n// null is used as a place holder for the ((lig)|((cons)|(numbers)(stack)?)) groups\nvar LEGACY_SEQUENCE = [\"eVowel\", \"yayit\", null, \"lig\", null, \"cons\", \"stack\", \"kinzi\", \"uVowel\", \"anusvara\", \"asat\",\n    \"stack\", \"yapin\", \"wasway\", \"hatoh\", \"wasway\", \"yapin\", \"kinzi\", \"uVowel\", \"lDot\", \"lVowel\", \"lDot\", \"anusvara\",\n    \"uVowel\", \"lVowel\", \"aVowel\", \"stack\", \"lDot\", \"visarga\", \"asat\", \"lDot\", \"visarga\", \"lDot\"\n];\n\n/**\n * Class to handle converting Myanmar (Burmese) text to/from Myanmar Unicode 5.1.\n * Myanmar Unicode text is assumed to conform to UTN11r3.\n * @param spec - hierarchical maps for each component of syllable for Unicode to legacy conversion\n */\nclass Converter {\n    constructor(spec) {\n        this.spec = spec;\n        this.useZwsp = false;\n        this.sourceEncoding = spec.fonts[0];\n        this.unicodePattern = this.buildRegExp(UNICODE_SEQUENCE, true);\n        this.legacyPattern = this.buildRegExp(LEGACY_SEQUENCE, false);\n        this.fontFamily = spec.fonts.join(', ');\n    }\n\n    buildRegExp(sequence, isUnicode) {\n        var i, j, k;\n\n        var pattern = \"\";\n        var escapeRe = new RegExp(\"([\\\\^\\\\$\\\\\\\\\\\\.\\\\*\\\\+\\\\?\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\\\\|])\", \"g\");\n        if (!this.reverse) {\n            this.reverse = {};\n        }\n        if (!this.minCodePoint) {\n            this.minCodePoint = this.spec[\"cons\"][\"က\"].charCodeAt(0);\n            this.maxCodePoint = this.minCodePoint;\n        }\n        for (i = 0; i < sequence.length; i++) {\n            var alternates = [];\n            if (sequence[i] == null) {\n                continue;\n            }\n            if (this.reverse[sequence[i]] == null) {\n                this.reverse[sequence[i]] = {};\n            }\n            for (j in this.spec[sequence[i]]) {\n                if (this.spec[sequence[i]][j] && this.spec[sequence[i]][j].length > 0) {\n                    for (k = 0; k < this.spec[sequence[i]][j].length; k++) {\n                        var codePoint = this.spec[sequence[i]][j].charCodeAt(k);\n                        if (codePoint != 0x20) {\n                            if (codePoint > this.maxCodePoint) {\n                                this.maxCodePoint = codePoint;\n                            }\n                            if (codePoint < this.minCodePoint) {\n                                this.minCodePoint = codePoint;\n                            }\n                        }\n                    }\n                    if (isUnicode) {\n                        // items with an underscore suffix are not put into the regexp\n                        // but they are used to build the legacy to unicode map\n                        var underscore = j.indexOf('_');\n                        if (underscore == -1) {\n                            this.reverse[sequence[i]][this.spec[sequence[i]][j]] = j;\n                            alternates.push(j.replace(escapeRe, \"\\\\$1\"));\n                        }\n                        else {\n                            this.reverse[sequence[i]][this.spec[sequence[i]][j]] = j.substring(0, underscore);\n                        }\n                    }\n                    else {\n                        var escapedAlternate = this.spec[sequence[i]][j].replace(escapeRe, \"\\\\$1\");\n                        alternates.push(escapedAlternate);\n                    }\n                }\n            }\n            alternates = alternates.sort(Converter.sortLongestFirst);\n            if (sequence[i] == \"cons\") {\n                pattern += \"(\";\n            } else if (sequence[i] == \"lig\") {\n                pattern += \"(\";\n            }\n            pattern += \"(\";\n            var subPattern = \"\";\n            for (k = 0; k < alternates.length; k++) {\n                if (k == 0) {\n                    subPattern += alternates[k];\n                } else {\n                    subPattern += \"|\" + alternates[k];\n                }\n            }\n            if (sequence[i] == \"stack\") {\n                this.legacyStackPattern = new RegExp(subPattern);\n            }\n            if (sequence[i] == \"kinzi\") {\n                this.legacyKinziPattern = new RegExp(subPattern);\n            }\n            if (sequence[i] == \"lig\") {\n                this.legacyLigPattern = new RegExp(subPattern);\n            }\n            pattern += subPattern + \")\";\n            if (sequence[i] == \"cons\") {\n            }\n            else if (sequence[i] == \"lig\") {\n                pattern += \"|\"\n            }\n            else if (sequence[i] == \"stack\" && sequence[i - 1] == \"cons\") {\n                pattern += \"?))\";\n            }\n            else if (sequence[i] == \"wasway\" || sequence[i] == \"hatoh\" ||\n                sequence[i] == \"uVowel\" || sequence[i] == \"lVowel\" || sequence[i] == \"aVowel\" ||\n                sequence[i] == \"lDot\" || sequence[i] == \"visarga\") {\n                if (isUnicode) {\n                    pattern += \"?\";\n                } else {\n                    pattern += \"*\";\n                } // these are frequently multi-typed\n            }\n            else {\n                pattern += \"?\";\n            }\n        }\n        /*if (isUnicode) {\n            console.log(\"unicode pattern: \" + pattern);\n        } else {   //^ $ \\ . * + ? ( ) [ ] { } |\n            console.log(\"legacy pattern: \" + pattern);\n        }*/\n        return new RegExp(pattern, \"g\");\n    }\n\n    /**\n     * @internal\n     */\n    static sortLongestFirst(a, b) {\n        if (a.length > b.length) {\n            return -1;\n        } else if (a.length < b.length) {\n            return 1;\n        } else if (a < b) {\n            return -1;\n        } else if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Convert text to Unicode\n     * @param inputText in legacy encoding\n     * @return converted text in Unicode 5.1\n     */\n    convertToUnicode(inputText) {\n        return this.convertToUnicodeSyllables(inputText).outputText;\n    }\n\n\n    /**\n     * Convert text to Unicode\n     * @param inputText in legacy encoding\n     * @return converted text in Unicode 5.1\n     */\n    convertToUnicodeSyllables(inputText) {\n        var outputText = '';\n        var syllables = [];\n        var pos = 0;\n        this.legacyPattern.lastIndex = 0;\n        var prevSyllable = null;\n        var match = this.legacyPattern.exec(inputText);\n        while (match) {\n            if (match.index != pos) {\n                prevSyllable = null;\n                var nonMatched = inputText.substring(pos, match.index);\n                outputText += nonMatched;\n                syllables.push(nonMatched);\n            }\n            pos = this.legacyPattern.lastIndex;\n            //console.log(\"To Unicode Match: \" + match);\n            prevSyllable = this.toUnicodeMapper(inputText, match, prevSyllable);\n            syllables.push(prevSyllable);\n            outputText += prevSyllable;\n            match = this.legacyPattern.exec(inputText);\n        }\n        if (pos < inputText.length) {\n            nonMatched = inputText.substring(pos, inputText.length);\n            outputText += nonMatched;\n            syllables.push(nonMatched);\n        }\n        var ret = {};\n        ret.outputText = outputText;\n        ret.syllables = syllables;\n        return ret;\n    }\n\n    /**\n     * @internal\n     */\n    toUnicodeMapper(inputText, matchData, prevSyllable) {\n        var syllable = {};\n        for (var g = 1; g < matchData.length; g++) {\n            var component = LEGACY_SEQUENCE[g - 1];\n            if (component == null || matchData[g] == null) {\n                continue;\n            }\n            // TODO handle repeated components\n            if (syllable[component]) {\n                console.log(\"Unicode Syllable:\" + matchData[0] + \" multiple values \" + syllable[component] + \" / \" + this.reverse[component][matchData[g]]);\n            }\n            syllable[component] = this.reverse[component][matchData[g]];\n            if (!syllable[component]) {\n                console.log(\"Undefined \" + component + \" \" + matchData[g]);\n            }\n            // check a few sequences putting ligature components in right place\n            if (syllable[component].length > 1) {\n                if (component == \"yapin\") {\n                    if (syllable[component].charAt(1) == \"ွ\") {\n                        syllable[\"wasway\"] = \"ွ\";\n                        if (syllable[component].length > 2) {\n                            if (syllable[component].charAt(2) == \"ှ\") {\n                                syllable[\"hatoh\"] = \"ှ\";\n                            } else {\n                                console.log(\"Unhandled yapin ligature: \" + syllable[component]);\n                            }\n                        }\n                        syllable[component] = syllable[component].substring(0, 1);\n                    }\n                    else if (syllable[component].charAt(1) == \"ှ\" || syllable[component].length > 2) {\n                        syllable[\"hatoh\"] = \"ှ\";\n                        syllable[component] = syllable[component].substring(0, 1);\n                    }\n                }\n                else if (component == \"yayit\") {\n                    if (syllable[component].charAt(1) == \"ွ\") {\n                        syllable[\"wasway\"] = \"ွ\";\n                    } else if (syllable[component].charAt(1) == \"ု\") {\n                        syllable[\"lVowel\"] = \"ု\";\n                    } else if (syllable[component].charAt(1) == \"ိ\" &&\n                        syllable[component].charAt(2) == \"ု\") {\n                        syllable[\"uVowel\"] = \"ိ\";\n                        syllable[\"lVowel\"] = \"ု\";\n                    }\n                    else {\n                        console.log(\"unhandled yayit ligature: \" + syllable[component]);\n                    }\n                    syllable[component] = syllable[component].substring(0, 1);\n                }\n                else if (component == \"wasway\") {\n                    syllable[\"hatoh\"] = syllable[component].substring(1, 2);\n                    syllable[component] = syllable[component].substring(0, 1);\n                }\n                else if (component == \"hatoh\") {\n                    syllable[\"lVowel\"] = syllable[component].substring(1, 2);\n                    syllable[component] = syllable[component].substring(0, 1);\n                }\n                else if (component == \"uVowel\") {\n                    syllable[\"anusvara\"] = syllable[component].substring(1, 2);\n                    syllable[component] = syllable[component].substring(0, 1);\n                }\n                else if (component == \"aVowel\") {\n                    syllable[\"asat\"] = syllable[component].substring(1, 2);\n                    syllable[component] = syllable[component].substring(0, 1);\n                }\n                else if (component == \"kinzi\") {   // kinzi is length 3 to start with\n                    if (syllable[component].charAt(3) == \"ံ\" || syllable[component].length > 4 &&\n                        syllable[component].charAt(4) == \"ံ\") {\n                        syllable[\"anusvara\"] = \"ံ\";\n                    }\n                    if (syllable[component].charAt(3) == \"ိ\" || syllable[component].charAt(3) == \"ီ\") {\n                        syllable[\"uVowel\"] = syllable[component].charAt(3);\n                    }\n                    syllable[component] = syllable[component].substring(0, 3);\n                }\n                else if (component == \"cons\") {\n                    if (syllable[component].charAt(1) == \"ာ\") {\n                        syllable[\"aVowel\"] = syllable[component].charAt(1);\n                        syllable[component] = syllable[component].substring(0, 1);\n                    }\n                }\n                else if (component == \"stack\" || component == \"lig\") {\n                    // should be safe to ignore, since the relative order is correct\n                }\n                else {\n                    console.log(\"unhandled ligature: \" + component + \" \" + syllable[component]);\n                }\n            }\n        }\n        // now some post processing\n        if (syllable[\"asat\"]) {\n            if (!syllable[\"eVowel\"] && (syllable[\"yayit\"] || syllable[\"yapin\"] || syllable[\"wasway\"] ||\n                syllable[\"lVowel\"])) {\n                syllable[\"contraction\"] = syllable[\"asat\"];\n                delete syllable[\"asat\"];\n            }\n            if (syllable[\"cons\"] == \"ဥ\") {\n                syllable[\"cons\"] = \"ဉ\";\n            }\n        }\n        if (syllable[\"cons\"] == \"ဥ\" && syllable[\"uVowel\"] == \"ီ\") {\n            syllable[\"cons\"] = \"ဦ\";\n            delete syllable[\"uVowel\"];\n        }\n        else if (syllable[\"cons\"] == \"စ\" && syllable[\"yapin\"]) {\n            syllable[\"cons\"] = \"ဈ\";\n            delete syllable[\"yapin\"];\n        }\n        else if (syllable[\"cons\"] == \"သ\" && syllable[\"yayit\"]) {\n            if (syllable[\"eVowel\"] && syllable[\"aVowel\"] && syllable[\"asat\"]) {\n                syllable[\"cons\"] = \"ဪ\";\n                delete syllable[\"yayit\"];\n                delete syllable[\"eVowel\"];\n                delete syllable[\"aVowel\"];\n                delete syllable[\"asat\"]\n            }\n            else {\n                syllable[\"cons\"] = \"ဩ\";\n                delete syllable[\"yayit\"];\n            }\n        }\n        else if (syllable[\"cons\"] == \"၀\") {\n            // convert zero to wa except in numbers\n            if ((matchData[0].length == 1 && matchData.index > 0 &&\n                inputText.charAt(matchData.index - 1) == this.spec[\"cons\"][\"အ\"]) ||\n                (matchData[0].length > 1 && (matchData.index == 0 ||\n                inputText.charCodeAt(matchData.index - 1) < 0x1040 ||\n                inputText.charCodeAt(matchData.index - 1) > 0x1049)) ||\n                (inputText.length > matchData.index + matchData[0].length &&\n                (inputText.charAt(matchData.index + matchData[0].length).match(this.legacyLigPattern) ||\n                (inputText.charCodeAt(matchData.index + matchData[0].length) >= 0x1000 &&\n                inputText.charCodeAt(matchData.index + matchData[0].length) <= 0x1021) ||\n                inputText.charAt(matchData.index + matchData[0].length) == this.spec[\"cons\"][\"ဿ\"])) ||\n                (inputText.length > matchData.index + matchData[0].length + 1 &&\n                (inputText.charAt(matchData.index + matchData[0].length + 1) == this.spec[\"asat\"][\"်\"] ||\n                inputText.charAt(matchData.index + matchData[0].length + 1).match(this.legacyStackPattern) ||\n                inputText.charAt(matchData.index + matchData[0].length + 1).match(this.legacyKinziPattern))) ||\n                (inputText.length > matchData.index + matchData[0].length + 2 &&\n                inputText.charAt(matchData.index + matchData[0].length + 2) == this.spec[\"asat\"][\"်\"] &&\n                inputText.charAt(matchData.index + matchData[0].length + 1) == this.spec[\"asat\"][\"့\"])) {\n                syllable[\"cons\"] = \"ဝ\";\n            }\n        }\n        else if (syllable[\"cons\"] == \"၄\" && inputText.length >= matchData.index + matchData[0].length + 3) {\n            // check for lagaun\n            if (inputText.substr(matchData.index + matchData[0].length, 3) ==\n                this.spec[\"cons\"][\"င\"] + this.spec[\"asat\"][\"်\"] + this.spec[\"visarga\"][\"း\"]) {\n                syllable[\"cons\"] = \"၎\";\n            }\n        }\n        else if (syllable[\"cons\"] == \"၇\" && (syllable[\"eVowel\"] || syllable[\"uVowel\"] || syllable[\"lVowel\"] || syllable[\"anusvara\"] ||\n            syllable[\"aVowel\"] || syllable[\"lDot\"] || syllable[\"asat\"] || syllable[\"wasway\"] || syllable[\"hatoh\"])) {\n            // check for lagaun\n            // if (inputText.substr(matchData.index + matchData[0].length, 3) ==\n            // this.spec[\"cons\"][\"င\"] + this.spec[\"asat\"][\"်\"] + this.spec[\"visarga\"][\"း\"])\n            syllable[\"cons\"] = \"ရ\";\n            console.log(\"7 found instead of ရ: \" + inputText);\n        }\n        var outputText = \"\";\n        if (this.useZwsp && !syllable[\"kinzi\"] && !syllable[\"lig\"] && !syllable[\"stack\"] && !syllable[\"contraction\"] && !syllable[\"asat\"] &&\n            (prevSyllable != \"​အ\") && (prevSyllable != null)) {\n            outputText += \"\\u200B\";\n        }\n        var outputOrder = [\n            \"kinzi\", \"lig\", \"cons\", \"numbers\", \"stack\", \"contraction\", \"yapin\", \"yayit\", \"wasway\", \"hatoh\", \"eVowel\",\n            \"uVowel\", \"lVowel\", \"anusvara\", \"aVowel\", \"lDot\", \"asat\", \"visarga\"\n        ];\n        for (var i = 0; i < outputOrder.length; i++) {\n            if (syllable[outputOrder[i]]) {\n                outputText += syllable[outputOrder[i]];\n            }\n        }\n        return outputText;\n    }\n\n    /**\n     * Convert text from Unicode into a legacy encoding.\n     * @param inputText in Unicode 5.1\n     * @return text in legacy encoding\n     */\n    convertFromUnicode(inputText) {\n        inputText = inputText.replace(/[\\u200B\\u2060]/g, '');\n        var outputText = \"\";\n        var pos = 0;\n        this.unicodePattern.lastIndex = 0;\n        var match = this.unicodePattern.exec(inputText);\n        while (match) {\n            outputText += inputText.substring(pos, match.index);\n            pos = this.unicodePattern.lastIndex;\n            //console.log(\"From Unicode Match: \" + match);\n            outputText += this.fromUnicodeMapper(inputText, match);\n            match = this.unicodePattern.exec(inputText);\n        }\n        if (pos < inputText.length) {\n            outputText += inputText.substring(pos, inputText.length);\n        }\n        return outputText;\n    }\n\n    /**\n     * @internal\n     */\n    fromUnicodeMapper(inputText, matchData) {\n        var unicodeSyllable = {};\n        var syllable = {};\n        for (var g = 1; g < matchData.length; g++) {\n            var component = UNICODE_SEQUENCE[g - 1];\n            if (component == null || matchData[g] == null) {\n                continue;\n            }\n            // TODO handle repeated components\n            if (syllable[component]) {\n                console.log(\"Legacy Syllable:\" + matchData[0] + \" \" + component + \" multiple values \" + syllable[component] + \" / \" + this.spec[component][matchData[g]]);\n            }\n            unicodeSyllable[component] = matchData[g];\n            syllable[component] = this.spec[component][matchData[g]];\n        }\n        var key;\n        if (unicodeSyllable[\"kinzi\"]) {\n            if (unicodeSyllable[\"uVowel\"]) {\n                if (unicodeSyllable[\"anusvara\"]) {\n                    key = unicodeSyllable[\"kinzi\"] + unicodeSyllable[\"uVowel\"] + unicodeSyllable[\"anusvara\"] + \"_lig\";\n                    if (this.spec[\"kinzi\"][key] && this.spec[\"kinzi\"][key].length) {\n                        syllable[\"kinzi\"] = this.spec[\"kinzi\"][key];\n                        delete syllable[\"anusvara\"];\n                    }\n                }\n                else {\n                    key = unicodeSyllable[\"kinzi\"] + unicodeSyllable[\"uVowel\"] + \"_lig\";\n                    if (this.spec[\"kinzi\"][key] && this.spec[\"kinzi\"][key].length) {\n                        syllable[\"kinzi\"] = this.spec[\"kinzi\"][key];\n                        delete syllable[\"uVowel\"];\n                    }\n                }\n            }\n            if (unicodeSyllable[\"anusvara\"]) {\n                key = unicodeSyllable[\"kinzi\"] + unicodeSyllable[\"anusvara\"] + \"_lig\";\n                if (this.spec[\"kinzi\"][key] && this.spec[\"kinzi\"][key].length) {\n                    syllable[\"kinzi\"] = this.spec[\"kinzi\"][key];\n                    delete syllable[\"anusvara\"];\n                }\n            }\n        }\n        // check for code points which may not have a direct mapping\n        if (unicodeSyllable[\"cons\"] == \"ဉ\") {\n            if (unicodeSyllable[\"asat\"]) {\n                syllable[\"cons\"] = this.spec[\"cons\"][\"ဥ\"];\n            }\n            else if (unicodeSyllable[\"stack\"]) {\n                syllable[\"cons\"] = this.spec[\"cons\"][\"ဉ_alt\"];\n            }\n            else if (unicodeSyllable[\"aVowel\"] && this.spec[\"cons\"][\"ဉာ_lig\"]) {\n                syllable[\"cons\"] = this.spec[\"cons\"][\"ဉာ_lig\"];\n                delete syllable[\"aVowel\"];\n            }\n            // this hatoh can occur with aVowel, so no else\n            if (unicodeSyllable[\"hatoh\"]) {\n                syllable[\"hatoh\"] = this.spec[\"hatoh\"][\"ှ_small\"];\n            }\n\n\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ဠ\") {\n            if (unicodeSyllable[\"hatoh\"]) {\n                syllable[\"hatoh\"] = this.spec[\"hatoh\"][\"ှ_small\"];\n            }\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ဈ\" && this.spec[\"cons\"][\"ဈ\"].length == 0) {\n            syllable[\"cons\"] = this.spec[\"cons\"][\"စ\"];\n            syllable[\"yapin\"] = this.spec[\"yapin\"][\"ျ\"];\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ဩ\" && this.spec[\"cons\"][\"ဩ\"].length == 0) {\n            syllable[\"cons\"] = this.spec[\"cons\"][\"သ\"];\n            syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ_wide\"];\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ဪ\" && this.spec[\"cons\"][\"ဪ\"].length == 0) {\n            syllable[\"cons\"] = this.spec[\"သ\"];\n            syllable[\"yayit\"] = this.spec[\"ြ_wide\"];\n            syllable[\"eVowel\"] = this.spec[\"ေ\"];\n            syllable[\"aVowel\"] = this.spec[\"ာ\"];\n            syllable[\"asat\"] = this.spec[\"်\"];\n        }\n        else if (unicodeSyllable[\"cons\"] == \"၎င်း\" && this.spec[\"cons\"][\"၎င်း\"].length == 0) {\n            if (this.spec[\"၎\"].length) {\n                syllable[\"cons\"] = this.spec[\"cons\"][\"၎\"] + this.spec[\"cons\"][\"င\"] +\n                    this.spec[\"asat\"][\"်\"] + this.spec[\"visarga\"][\"း\"];\n            } else {\n                syllable[\"cons\"] = this.spec[\"number\"][\"၄\"] + this.spec[\"cons\"][\"င\"] +\n                    this.spec[\"asat\"][\"်\"] + this.spec[\"visarga\"][\"း\"];\n            }\n        }\n        else if (unicodeSyllable[\"cons\"] == \"န\" || unicodeSyllable[\"cons\"] == \"ည\") {\n            if (unicodeSyllable[\"stack\"] || unicodeSyllable[\"yapin\"] || unicodeSyllable[\"wasway\"] ||\n                unicodeSyllable[\"hatoh\"] || unicodeSyllable[\"lVowel\"]) {\n                syllable[\"cons\"] = this.spec[\"cons\"][unicodeSyllable[\"cons\"] + \"_alt\"];\n            }\n\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ရ\") {\n            if (unicodeSyllable[\"yapin\"] || unicodeSyllable[\"wasway\"] || unicodeSyllable[\"lVowel\"]) {\n                syllable[\"cons\"] = this.spec[\"cons\"][unicodeSyllable[\"cons\"] + \"_alt\"];\n            }\n            else if (unicodeSyllable[\"hatoh\"] && this.spec[\"cons\"][unicodeSyllable[\"cons\"] + \"_tall\"].length) {\n                syllable[\"cons\"] = this.spec[\"cons\"][unicodeSyllable[\"cons\"] + \"_tall\"];\n            }\n        }\n        else if (unicodeSyllable[\"cons\"] == \"ဦ\") {\n            if (this.spec[\"cons\"][\"ဦ\"].length == 0) {\n                syllable[\"cons\"] = this.spec[\"cons\"][\"ဥ\"];\n                syllable[\"uVowel\"] = this.spec[\"uVowel\"][\"ီ\"];\n            }\n        }\n        // stack with narrow upper cons\n        if ((unicodeSyllable[\"cons\"] == \"ခ\" || unicodeSyllable[\"cons\"] == \"ဂ\" ||\n            unicodeSyllable[\"cons\"] == \"င\" || unicodeSyllable[\"cons\"] == \"စ\" ||\n            unicodeSyllable[\"cons\"] == \"ဎ\" || unicodeSyllable[\"cons\"] == \"ဒ\" ||\n            unicodeSyllable[\"cons\"] == \"ဓ\" || unicodeSyllable[\"cons\"] == \"န\" ||\n            unicodeSyllable[\"cons\"] == \"ပ\" || unicodeSyllable[\"cons\"] == \"ဖ\" ||\n            unicodeSyllable[\"cons\"] == \"ဗ\" || unicodeSyllable[\"cons\"] == \"မ\" ||\n            unicodeSyllable[\"cons\"] == \"ဝ\") &&\n            unicodeSyllable[\"stack\"] && this.spec[\"stack\"][unicodeSyllable[\"stack\"] + \"_narrow\"] &&\n            this.spec[\"stack\"][unicodeSyllable[\"stack\"] + \"_narrow\"].length > 0) {\n            syllable[\"stack\"] = this.spec[\"stack\"][unicodeSyllable[\"stack\"] + \"_narrow\"];\n        }\n        // yapin variants\n        if (unicodeSyllable[\"yapin\"] && (unicodeSyllable[\"wasway\"] || unicodeSyllable[\"hatoh\"])) {\n            if (this.spec[\"yapin\"][\"ျ_alt\"].length) {\n                syllable[\"yapin\"] = this.spec[\"yapin\"][\"ျ_alt\"];\n            }\n            else // assume we have the ligatures\n            {\n                key = \"ျ\" + (unicodeSyllable[\"wasway\"] ? \"ွ\" : \"\") +\n                    (unicodeSyllable[\"hatoh\"] ? \"ှ\" : \"\") + \"_lig\";\n                if (this.spec[\"yapin\"][key]) {\n                    syllable[\"yapin\"] = this.spec[\"yapin\"][key];\n                    if (unicodeSyllable[\"wasway\"]) {\n                        delete syllable[\"wasway\"];\n                    }\n                    if (unicodeSyllable[\"hatoh\"]) {\n                        delete syllable[\"hatoh\"];\n                    }\n                }\n                else {\n                    console.log(key + \" not found\");\n                }\n            }\n        }\n        if (unicodeSyllable[\"yayit\"]) {\n            var widthVariant = \"_wide\";\n            var upperVariant = \"\";\n            if (unicodeSyllable[\"cons\"] == \"ခ\" || unicodeSyllable[\"cons\"] == \"ဂ\" ||\n                unicodeSyllable[\"cons\"] == \"င\" || unicodeSyllable[\"cons\"] == \"စ\" ||\n                unicodeSyllable[\"cons\"] == \"ဎ\" || unicodeSyllable[\"cons\"] == \"ဒ\" ||\n                unicodeSyllable[\"cons\"] == \"ဓ\" || unicodeSyllable[\"cons\"] == \"န\" ||\n                unicodeSyllable[\"cons\"] == \"ပ\" || unicodeSyllable[\"cons\"] == \"ဖ\" ||\n                unicodeSyllable[\"cons\"] == \"ဗ\" || unicodeSyllable[\"cons\"] == \"မ\" ||\n                unicodeSyllable[\"cons\"] == \"ဝ\") {\n                widthVariant = \"_narrow\";\n            }\n            if (unicodeSyllable[\"uVowel\"] || unicodeSyllable[\"kinzi\"] || unicodeSyllable[\"anusvara\"]) {\n                upperVariant = \"_upper\";\n            }\n            if (unicodeSyllable[\"wasway\"]) {\n                if (unicodeSyllable[\"hatoh\"]) {\n                    if (this.spec[\"wasway\"][\"ွှ_small\"].length) {\n                        if (this.spec[\"yayit\"][\"ြ\" + upperVariant + widthVariant].length) {\n                            syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + upperVariant + widthVariant];\n                        }\n                        else {\n                            if (widthVariant == \"_narrow\") {\n                                widthVariant = \"\";\n                            }\n                            syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + widthVariant];\n                        }\n                        syllable[\"wasway\"] = this.spec[\"wasway\"][\"ွှ_small\"];\n                        delete syllable[\"hatoh\"];\n                    }\n                    else if (this.spec[\"yayit\"][\"ြ_lower\" + widthVariant].length) {\n                        if (this.spec[\"yayit\"][\"ြ_lower\" + upperVariant + widthVariant].length) {\n                            syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ_lower\" + upperVariant + widthVariant];\n                        } else {\n                            syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ_lower\" + widthVariant];\n                        }\n                    }\n                }\n                else if (this.spec[\"yayit\"][\"ြွ\" + upperVariant + widthVariant].length) {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြွ\" + upperVariant + widthVariant];\n                    delete syllable[\"wasway\"];\n                }\n                else if (this.spec[\"yayit\"][\"ြွ\" + widthVariant].length) {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြွ\" + widthVariant];\n                    delete syllable[\"wasway\"];\n                }\n                else if (this.spec[\"yayit\"][\"ြ_lower_wide\"].length) {\n                    if (this.spec[\"yayit\"][\"ြ\" + \"_lower\" + upperVariant + widthVariant].length) {\n                        syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + \"_lower\" + upperVariant + widthVariant];\n                    } else {\n                        syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + \"_lower\" + widthVariant];\n                    }\n                }\n            }\n            else if (unicodeSyllable[\"hatoh\"]) {\n                if (upperVariant.length == 0 && widthVariant == \"_narrow\") {\n                    widthVariant = \"\";\n                }\n                if (this.spec[\"yayit\"][\"ြ\" + upperVariant + widthVariant].length) {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + upperVariant + widthVariant];\n                }\n                else if (this.spec[\"yayit\"][\"ြ\" + widthVariant].length) {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + widthVariant];\n                }\n                else {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\"];\n                }\n                syllable[\"hatoh\"] = this.spec[\"hatoh\"][\"ှ_small\"];\n            }\n            else if (unicodeSyllable[\"lVowel\"] == \"ု\" && this.spec[\"yayit\"][\"ြု_wide\"]) {\n                if (syllable[\"uVowel\"] == this.spec[\"uVowel\"][\"ိ\"] && this.spec[\"yayit\"][\"ြို\" + widthVariant]) {\n                    syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြို\" + widthVariant];\n                    delete syllable[\"uVowel\"];\n                }\n                else {\n                    if (this.spec[\"yayit\"][\"ြု\" + upperVariant + widthVariant].length) {\n                        syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြု\" + upperVariant + widthVariant];\n                    } else {\n                        syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြု\" + widthVariant];\n                    }\n                }\n                delete syllable[\"lVowel\"];\n            }\n            else {\n                if (upperVariant.length == 0 && widthVariant == \"_narrow\") {\n                    widthVariant = \"\";\n                }\n                syllable[\"yayit\"] = this.spec[\"yayit\"][\"ြ\" + upperVariant + widthVariant];\n            }\n        }\n        if (syllable[\"wasway\"] && syllable[\"hatoh\"]) {\n            delete syllable[\"hatoh\"];\n            syllable[\"wasway\"] = this.spec[\"wasway\"][\"ွှ_lig\"];\n        }\n        if (syllable[\"hatoh\"] && syllable[\"lVowel\"] && !syllable[\"yapin\"] && !syllable[\"yayit\"]) {\n            syllable[\"hatoh\"] = this.spec[\"hatoh\"][\"ှ\" + unicodeSyllable[\"lVowel\"] + \"_lig\"];\n            delete syllable[\"lVowel\"];\n        }\n        if (syllable[\"uVowel\"] && unicodeSyllable[\"uVowel\"] == \"ိ\" &&\n            syllable[\"anusvara\"] && unicodeSyllable[\"anusvara\"] == \"ံ\") {\n            syllable[\"uVowel\"] = this.spec[\"uVowel\"][\"ိံ_lig\"];\n            delete syllable[\"anusvara\"];\n        }\n        if (syllable[\"lVowel\"] && (unicodeSyllable[\"yayit\"] || unicodeSyllable[\"yapin\"] ||\n            unicodeSyllable[\"wasway\"] || unicodeSyllable[\"hatoh\"] || unicodeSyllable[\"lig\"] ||\n            unicodeSyllable[\"stack\"] || unicodeSyllable[\"cons\"] == \"ဍ\" || unicodeSyllable[\"cons\"] == \"ဋ\" ||\n            unicodeSyllable[\"cons\"] == \"ဌ\" || unicodeSyllable[\"cons\"] == \"ဈ\" ||\n            unicodeSyllable[\"cons\"] == \"ဥ\" || unicodeSyllable[\"cons\"] == \"ဠ\")) {\n            syllable[\"lVowel\"] = this.spec[\"lVowel\"][unicodeSyllable[\"lVowel\"] + \"_tall\"];\n        }\n        if (unicodeSyllable[\"aVowel\"] && unicodeSyllable[\"asat\"] && unicodeSyllable[\"aVowel\"] == \"ါ\") {\n            syllable[\"aVowel\"] = this.spec[\"aVowel\"][\"ါ်_lig\"];\n            delete syllable[\"asat\"];\n        }\n        if (unicodeSyllable[\"lDot\"] && (unicodeSyllable[\"aVowel\"] || !(unicodeSyllable[\"yayit\"] || unicodeSyllable[\"lig\"] ||\n            unicodeSyllable[\"stack\"] || unicodeSyllable[\"yapin\"] || unicodeSyllable[\"wasway\"] ||\n            unicodeSyllable[\"hatoh\"] || unicodeSyllable[\"lVowel\"] || unicodeSyllable[\"cons\"] == \"ဍ\" ||\n            unicodeSyllable[\"cons\"] == \"ဋ\" || unicodeSyllable[\"cons\"] == \"ဌ\" ||\n            unicodeSyllable[\"cons\"] == \"ဈ\" || unicodeSyllable[\"cons\"] == \"ရ\"))) {\n            if (unicodeSyllable[\"cons\"] == \"န\") {\n                syllable[\"lDot\"] = this.spec[\"lDot\"][\"့_alt\"];\n            } else {\n                syllable[\"lDot\"] = this.spec[\"lDot\"][\"့_left\"];\n            }\n        }\n        if (unicodeSyllable[\"lDot\"] && !syllable[\"yayit\"] && !(unicodeSyllable[\"cons\"] == \"ရ\") &&\n            ((syllable[\"hatoh\"] && syllable[\"hatoh\"].length == 1 && !syllable[\"lVowel\"]) ||\n            (syllable[\"lVowel\"] && syllable[\"lVowel\"] == this.spec[\"lVowel\"][\"ု\"]))) {\n            syllable[\"lDot\"] = this.spec[\"lDot\"][\"့_alt\"];\n        }\n        if (syllable[\"asat\"]) {\n            if (!syllable[\"eVowel\"] && (syllable[\"yayit\"] || syllable[\"yapin\"] || syllable[\"wasway\"] ||\n                syllable[\"lVowel\"])) {\n                syllable[\"contraction\"] = syllable[\"asat\"];\n                delete syllable[\"asat\"];\n            }\n        }\n        var outputOrder = [\n            \"eVowel\", \"yayit\", \"lig\", \"cons\", \"stack\", \"contraction\", \"yapin\", \"kinzi\", \"wasway\", \"hatoh\", \"uVowel\",\n            \"lVowel\", \"anusvara\", \"aVowel\", \"asat\", \"lDot\", \"visarga\"\n        ];\n        var outputText = \"\";\n        for (var i = 0; i < outputOrder.length; i++) {\n            if (syllable[outputOrder[i]]) {\n                outputText += syllable[outputOrder[i]];\n            }\n        }\n        return outputText;\n    }\n\n    /**\n     * Compute the frequency of characters matching a Myanmar syllable\n     * compared to the number of characters in the code point range of the conv.\n     * @param inputText to match against\n     * @param isUnicode true to match with genuine Unicode pattern, false to match legacy\n     */\n    matchFrequency(inputText, isUnicode) {\n        var re = this.legacyPattern;\n        var retValue = {};\n        retValue.syllables = [];\n        if (isUnicode) {\n            var utn11 = new TlsMyanmarUtn11();\n            re = utn11.pattern;\n        }\n        var legacyRange = \"[\" + String.fromCharCode(this.minCodePoint) + \"-\" +\n            String.fromCharCode(this.maxCodePoint) + \"]+\";\n        //console.log(legacyRange + \" \" + this.minCodePoint + \" \" + this.maxCodePoint);\n        var codeRange = isUnicode ? new RegExp(\"[က-႟ꩠ-ꩻ]+\", \"g\") : new RegExp(legacyRange, \"g\");\n        re.lastIndex = 0;\n        var pos = 0;\n        var matchCharCount = 0;\n        var nonMyanmarCount = 0;\n        var match = re.exec(inputText);\n        while (match) {\n            var nonMatched = inputText.substring(pos, match.index);\n            if (nonMatched.length) {\n                retValue.syllables.push(nonMatched);\n            }\n            var strippedNonMatched = nonMatched.replace(codeRange, \"\");\n            nonMyanmarCount += strippedNonMatched.length;\n            pos = re.lastIndex;\n            retValue.syllables.push(match[0]);\n            matchCharCount += match[0].length;\n            match = re.exec(inputText);\n        }\n        if (pos != inputText.length) {\n            nonMatched = inputText.substring(pos, inputText.length);\n            strippedNonMatched = nonMatched.replace(codeRange, \"\");\n            nonMyanmarCount += strippedNonMatched.length;\n            retValue.syllables.push(nonMatched);\n        }\n        var freq = (matchCharCount) ? matchCharCount / (inputText.length - nonMyanmarCount) : 0;\n        console.log(\"match uni=\" + isUnicode + \" freq=\" + freq + \" match count=\" + matchCharCount +\n            \" unmatched=\" + (inputText.length - nonMyanmarCount - matchCharCount) +\n            \" length=\" + inputText.length);\n        retValue.freq = freq;\n        return retValue;\n    }\n\n    getFontFamily(isUnicode) {\n        return (isUnicode) ? \"'Padauk','ThanLwin','Myanmar3','Parabaik'\" : this.fontFamily;\n    }\n\n    isPseudoUnicode() {\n        return (this.minCodePoint == 0x1000);\n    }\n}\n\nclass TlsMyanmarUtn11 {\n\n    constructor() {\n        this.kinzi = \"((င|ရ|ၚ)်\\u1039)?\";//1\n        this.cons = \"(က|ခ|ဂ|ဃ|င|စ|ဆ|ဇ|ဈ|ဉ|ည|ဋ|ဌ|ဍ|ဎ|ဏ|တ|ထ|ဒ|ဓ|န|ပ|ဖ|ဗ|ဘ|မ|ယ|ရ|လ|ဝ|သ|ဟ|ဠ|အ|ဣ|ဤ|ဥ|ဦ|ဧ|ဩ|ဪ|ဿ|၀|၁|၂|၃|၄|၅|၆|၇|၈|၉|၌|၍|၎|၏|ၐ|ၑ|ၒ|ၓ|ၔ|ၕ|ၚ|ၛ|ၜ|ၝ|ၡ|ၥ|ၦ|ၮ|ၯ|ၰ|ၵ|ၶ|ၷ|ၸ|ၹ|ၺ|ၻ|ၼ|ၽ|ၾ|ၿ|ႀ|ႁ|ႎ|႐|႑|႒|႓|႔|႕|႖|႗|႘|႙|႟|ꩠ|ꩡ|ꩢ|ꩣ|ꩤ|ꩥ|ꩦ|ꩧ|ꩨ|ꩩ|ꩪ|ꩫ|ꩬ|ꩭ|ꩮ|ꩯ|ꩱ|ꩲ|ꩳ|ꩴ|ꩵ|ꩶ|꩷|꩸|꩹|ꩺ)\";//3\n        this.stack = \"(\\u1039(က|ခ|ဂ|ဃ|င|စ|ဆ|ဇ|ဈ|ဉ|ည|ဋ|ဌ|ဍ|ဎ|ဏ|တ|ထ|ဒ|ဓ|န|ပ|ဖ|ဗ|ဘ|မ|ယ|ရ|လ|ဝ|သ|ဟ|ဠ|အ|ၚ|ၛ|ၜ|ၝ)){0,2}\";//4\n        this.asat = \"(\\u103A)?\";//6,11,22\n        this.medialY = \"(ျ|ၞ|ၟ)?\";//7\n        this.medialR = \"(ြ)?\";//8\n        this.medialW = \"(ွ|ႂ)?\";//9\n        this.medialH = \"(ှ|ၠ)?\";//10\n        // asat 11\n        this.eVowel = \"(\\u1031\\u1031|\\u1084\\u1031|\\u1031|\\u1084)?\";//12\n        this.uVowel = \"(ိ|ီ|ဲ|ဳ|ဴ|ဵ|ံ|ၱ|ၲ|ၳ|ၴ|ႅ|ႝ)?\";//13\n        this.lVowel = \"(ု|ူ)?\";//14\n        this.karenVowel = \"(ၢ|့)?\";//15\n        this.shanVowel = \"(ႆ)?\";//16\n        this.aVowel = \"(ါ|ာ|ၢ|ၣ|ၧ|ၨ|ႃ)?\";//17\n        this.anusvara = \"(ဲ|ံ)?\";//18\n        this.pwoTone = \"(ၤ|ၩ|ၪ|ၫ|ၬ|ၭ)?\";//19\n        this.lowerDot = \"(့)?\";//20\n        this.monH = \"(ှ)?\";//21\n        // asat 22\n        this.visarga = \"(း|ႇ|ႈ|ႉ|ႊ|ႋ|ႌ|ႍ|ႏ|ႚ|ႛ|ႜ)?\";//23\n        this.redup = \"(ႝꩰ)?\";//24\n        this.section = \"(၊|။)?\";//25\n        this.pattern = new RegExp(this.kinzi + this.cons + this.stack + this.asat + this.medialY + this.medialR + this.medialW + this.medialH + this.asat + this.eVowel + this.uVowel + this.lVowel + this.karenVowel + this.shanVowel + this.aVowel + this.anusvara + this.pwoTone + this.lowerDot + this.monH + this.asat + this.visarga + this.redup + this.section, \"g\");\n        return this;\n    }\n\n    findSyllables(inputText) {\n        var syllables = [];\n        var pos = 0;\n        var match = this.pattern.exec(inputText);\n        while (match) {\n            var nonMatched = inputText.substring(pos, match.index);\n            if (nonMatched.length) {\n                syllables.push(nonMatched);\n            }\n            pos = this.pattern.lastIndex;\n            // check for asat or virama and append to previous syllable\n            if (syllables.length && ((match[1] != null || match[4] != null ||\n                match[6] != null || match[11] != null || match[22] != null) ||\n                (syllables[syllables.length - 1] == \"အ\"))) {\n                var lastSyl = syllables.pop();\n                lastSyl += match[0];\n                syllables.push(lastSyl);\n            }\n            else {\n                syllables.push(match[0]);\n            }\n            match = this.pattern.exec(inputText);\n        }\n        if (pos != inputText.length) {\n            nonMatched = inputText.substring(pos, inputText.length);\n            syllables.push(nonMatched);\n        }\n        return syllables;\n    }\n}\n\n/** map to hold converters keyed by legacy encoding (font) name */\nexport var converters = {};\nfor (let enc in specs) {\n    var spec = specs[enc];\n    console.log('Converter', enc, 'for', spec.fonts);\n    var conv = new Converter(spec);\n    for (var i = 0; i < spec.fonts.length; i++) {\n        var font = spec.fonts[i];\n        converters[font] = conv;\n        converters[font.toLowerCase()] = conv;\n    }\n}\n\nexport function convert(encSrc, encTgt, txtSrc) {\n    if (encSrc == encTgt || !txtSrc) {\n        // If encoding is identical or text is trivial, just pass it through\n        return txtSrc;\n    }\n    //console.log('src', encSrc, txtSrc);\n    if (encSrc == 'unicode') {\n        var txtUni = txtSrc;\n    } else {\n        var convSrc = converters[encSrc];\n        //console.log('convSrc:', convSrc);\n        txtUni = convSrc.convertToUnicode(txtSrc);\n    }\n    if (encTgt == 'unicode') {\n        var txtTgt = txtUni;\n    } else {\n        var convTgt = converters[encTgt];\n        //console.log('convTgt:', convTgt);\n        txtTgt = convTgt.convertFromUnicode(txtTgt);\n    }\n    //console.log('tgt', encTgt, txtTgt);\n    return txtTgt;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tls/converter.js\n **/","// Copyright (C) 2010 Keith Stribley http://www.ThanLwinSoft.org/\n// Copyright (C) 2015 Logi Ragnarsson <logi@logi.org>\n// License: GNU Lesser General Public License, version 2.1 or later.\n// http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n\n/**\n * Specifications of legacy Burmese encodings for use with the tls.converter.Converter class\n */\nexport default {\n\n    \"zawgyi-one\": {\n        \"fonts\": [\"Zawgyi-One\"],\n        \"kinzi\": {\n            \"င်္\": \"\\u1064\",\n            \"င်္ိ_lig\": \"\\u108B\",\n            \"င်္ီ_lig\": \"\\u108C\",\n            \"င်္ံ_lig\": \"\\u108D\"\n        },\n        \"cons\": {\n            \"က\": \"က\",\n            \"ခ\": \"ခ\",\n            \"ဂ\": \"ဂ\",\n            \"ဃ\": \"ဃ\",\n            \"င\": \"င\",\n            \"စ\": \"စ\",\n            \"ဆ\": \"ဆ\",\n            \"ဇ\": \"ဇ\",\n            \"ဈ\": \"ဈ\",\n            \"ဉ\": \"ဉ\",\n            \"ဉ_alt\": \"\\u106A\",\n            \"ည\": \"ည\",\n            \"ည_alt\": \"\\u106B\",\n            \"ဋ\": \"ဋ\",\n            \"ဌ\": \"ဌ\",\n            \"ဍ\": \"ဍ\",\n            \"ဎ\": \"ဎ\",\n            \"ဏ\": \"ဏ\",\n            \"တ\": \"တ\",\n            \"ထ\": \"ထ\",\n            \"ဒ\": \"ဒ\",\n            \"ဓ\": \"ဓ\",\n            \"န\": \"န\",\n            \"န_alt\": \"\\u108F\",\n            \"ပ\": \"ပ\",\n            \"ဖ\": \"ဖ\",\n            \"ဗ\": \"ဗ\",\n            \"ဘ\": \"ဘ\",\n            \"မ\": \"မ\",\n            \"ယ\": \"ယ\",\n            \"ရ\": \"ရ\",\n            \"ရ_alt\": \"\\u1090\",\n            \"ရ_tall\": \"\",\n            \"လ\": \"လ\",\n            \"ဝ\": \"ဝ\",\n            \"သ\": \"သ\",\n            \"ဟ\": \"ဟ\",\n            \"ဠ\": \"ဠ\",\n            \"အ\": \"အ\",\n            \"ဣ\": \"ဣ\",\n            \"ဤ\": \"ဤ\",\n            \"ဥ\": \"ဥ\",\n            \"ဦ\": \"ဦ\",\n            \"ဧ\": \"ဧ\",\n            \"ဩ\": \"ဩ\",\n            \"ဪ\": \"ဪ\",\n            \"ဿ\": \"\\u1086\",\n            \"၌\": \"၌\",\n            \"၍\": \"၍\",\n            \"၎\": \"\",\n            \"၎င်း\": \"၎\",\n            \"၏\": \"၏\",\n            \"၀\": \"၀\",\n            \"၁\": \"၁\",\n            \"၂\": \"၂\",\n            \"၃\": \"၃\",\n            \"၄\": \"၄\",\n            \"၅\": \"၅\",\n            \"၆\": \"၆\",\n            \"၇\": \"၇\",\n            \"၈\": \"၈\",\n            \"၉\": \"၉\",\n            \"။\": \"။\",\n            \"၊\": \"၊\"\n        },\n        \"lig\": {\n            \"ဍ္ဍ\": \"\\u106E\",\n            \"ဍ္ဎ\": \"\\u106F\",\n            \"ဏ္ဍ\": \"\\u1091\",\n            \"ဋ္ဌ\": \"\\u1092\",\n            \"ဋ္ဋ\": \"\\u1097\"\n        },\n        \"stack\": {\n            \"္က\": \"\\u1060\",\n            \"္ခ\": \"\\u1061\",\n            \"္ဂ\": \"\\u1062\",\n            \"္ဃ\": \"\\u1063\",\n            \"္စ\": \"\\u1065\",\n            \"္ဆ\": \"\\u1066\",\n            \"္ဆ_narrow\": \"\\u1067\",\n            \"္ဇ\": \"\\u1068\",\n            \"္ဈ\": \"\\u1069\",\n            \"္ဋ\": \"\\u106C\",\n            \"္ဌ\": \"\\u106D\",\n            \"္ဍ\": \"\",\n            \"္ဎ\": \"\",\n            \"္ဏ\": \"\\u1070\",\n            \"္တ\": \"\\u1071\",\n            \"္တ_narrow\": \"\\u1072\",\n            \"္တွ\": \"\\u1096\",\n            \"္ထ\": \"\\u1073\",\n            \"္ထ_narrow\": \"\\u1074\",\n            \"္ဒ\": \"\\u1075\",\n            \"္ဓ\": \"\\u1076\",\n            \"္န\": \"\\u1077\",\n            \"္ပ\": \"\\u1078\",\n            \"္ဖ\": \"\\u1079\",\n            \"္ဗ\": \"\\u107A\",\n            \"္ဘ\": \"\\u107B\",\n            \"္မ\": \"\\u107C\",\n            \"္ယ\": \"\",\n            \"္ရ\": \"\",\n            \"္လ\": \"\\u1085\",\n            \"္သ\": \"\",\n            \"္အ\": \"\"\n        },\n        \"yapin\": {\n            \"ျ\": \"\\u103A\",\n            \"ျ_alt\": \"\\u107D\",\n            \"ျွ_lig\": \"\",\n            \"ျှ_lig\": \"\",\n            \"ျွှ_lig\": \"\"\n        },\n        \"yayit\": {\n            \"ြ\": \"\\u103B\",\n            \"ြ_wide\": \"\\u107E\",\n            \"ြ_upper_narrow\": \"\\u107F\",\n            \"ြ_upper_wide\": \"\\u1080\",\n            \"ြ_lower_narrow\": \"\\u1081\",\n            \"ြ_lower_wide\": \"\\u1082\",\n            \"ြ_lower_upper_narrow\": \"\\u1083\",\n            \"ြ_lower_upper_wide\": \"\\u1084\",\n            \"ြွ_narrow\": \"\",\n            \"ြွ_wide\": \"\",\n            \"ြွ_upper_narrow\": \"\",\n            \"ြွ_upper_wide\": \"\",\n            \"ြု_narrow\": \"\",\n            \"ြု_wide\": \"\",\n            \"ြု_upper_narrow\": \"\",\n            \"ြု_upper_wide\": \"\"\n        },\n        \"wasway\": {\n            \"ွ\": \"\\u103C\",\n            \"ွှ_lig\": \"\\u108A\",\n            \"ွှ_small\": \"\"\n        },\n        \"hatoh\": {\n            \"ှ\": \"\\u103D\",\n            \"ှ_small\": \"\\u1087\",\n            \"ှု_lig\": \"\\u1088\",\n            \"ှူ_lig\": \"\\u1089\"\n        },\n        \"eVowel\": {\n            \"ေ\": \"ေ\"\n        },\n        \"uVowel\": {\n            \"ိ\": \"ိ\",\n            \"ိံ_lig\": \"\\u108E\",\n            \"ီ\": \"ီ\"\n        },\n        \"lVowel\": {\n            \"ု\": \"ု\",\n            \"ု_tall\": \"\\u1033\",\n            \"ူ\": \"ူ\",\n            \"ူ_tall\": \"\\u1034\"\n        },\n        \"anusvara\": {\n            \"ံ\": \"ံ\",\n            \"ဲ\": \"ဲ\"\n        },\n        \"aVowel\": {\n            \"ါ\": \"ါ\",\n            \"ါ်_lig\": \"\\u105A\",\n            \"ာ\": \"ာ\"\n        },\n        \"lDot\": {\n            \"့\": \"\\u1095\",\n            \"့_alt\": \"\\u1094\",\n            \"့_left\": \"\\u1037\",\n            \"့_spaceDot\": \" \\u1037\",\n            \"့_spaceDotAlt\": \" \\u1094\"\n        },\n        \"asat\": {\n            \"်\": \"\\u1039\"\n        },\n        \"visarga\": {\n            \"း\": \"း\"\n        }\n    },\n\n\n    \"wininnwa\": {\n        \"fonts\": [\"Wininnwa\", \"Win Researcher\", \"Win Innwa\", \"Win   Innwa\", \"Win---Innwa\", \"Win---Researcher\"],\n        \"kinzi\": {\n            \"င်္\": \"F\",\n            \"င်္ိ_lig\": \"\\u00D8\",\n            \"င်္ီ_lig\": \"\\u00D0\",\n            \"င်္ံ_lig\": \"\\u00F8\"\n        },\n        \"cons\": {\n            \"က\": \"u\",\n            \"ခ\": \"c\",\n            \"ဂ\": \"*\",\n            \"ဃ\": \"C\",\n            \"င\": \"i\",\n            \"စ\": \"p\",\n            \"ဆ\": \"q\",\n            \"ဇ\": \"Z\",\n            \"ဈ\": \"ps\",\n            \"ဉ\": \"\\u00DA\",\n            \"ဉ_alt\": \"\\u00CD\",\n            \"ဉာ_lig\": \"\\u00D3\",\n            \"ည\": \"n\",\n            \"ည_alt\": \"\\u00F1\",\n            \"ဋ\": \"#\",\n            \"ဌ\": \"X\",\n            \"ဍ\": \"!\",\n            \"ဎ\": \"\\u00A1\",\n            \"ဏ\": \"P\",\n            \"တ\": \"w\",\n            \"ထ\": \"x\",\n            \"ဒ\": \"\\u0027\",\n            \"ဓ\": \"\\u0022\",\n            \"န\": \"e\",\n            \"န_alt\": \"E\",\n            \"ပ\": \"y\",\n            \"ဖ\": \"z\",\n            \"ဗ\": \"A\",\n            \"ဘ\": \"b\",\n            \"မ\": \"r\",\n            \"ယ\": \",\",\n            \"ရ\": \"&\",\n            \"ရ_alt\": \"\\u00BD\",\n            \"ရ_tall\": \"\",\n            \"လ\": \"v\",\n            \"ဝ\": \"0\",\n            \"သ\": \"o\",\n            \"ဟ\": \"[\",\n            \"ဠ\": \"V\",\n            \"အ\": \"t\",\n            \"ဣ\": \"\\u00A3\",\n            \"ဤ\": \"\\u00FE\",\n            \"ဥ\": \"O\",\n            \"ဦ\": \"OD\",\n            \"ဧ\": \"\\u007B\",\n            \"ဩ\": \"Mo\",\n            \"ဪ\": \"aMomf\",\n            \"ဿ\": \"\\u00F3\",\n            \"၌\": \"\\u00FC\",\n            \"၍\": \"\\u00ED\",\n            \"၎\": \"\\u00A4\",\n            \"၎င်း\": \"\",\n            \"၏\": \"\\u005C\",\n            \"၀\": \"0\",\n            \"၁\": \"1\",\n            \"၂\": \"2\",\n            \"၃\": \"3\",\n            \"၄\": \"4\",\n            \"၅\": \"5\",\n            \"၆\": \"6\",\n            \"၇\": \"7\",\n            \"၈\": \"8\",\n            \"၉\": \"9\",\n            \"။\": \"/\",\n            \"၊\": \"?\"\n        },\n        \"lig\": {\n            \"ဍ္ဍ\": \"\\u00D7\",\n            \"ဍ္ဎ\": \"\\u00B9\",\n            \"ဏ္ဍ\": \"@\",\n            \"ဋ္ဌ\": \"\\u007C\",\n            \"ဋ္ဋ\": \"\\u00A5\",\n            \"ကျပ်\": \"$\"\n        },\n        \"stack\": {\n            \"္က\": \"\\u00FA\",\n            \"္ခ\": \"\\u00A9\",\n            \"္ဂ\": \"\\u00BE\",\n            \"္ဃ\": \"\\u00A2\",\n            \"္စ\": \"\\u00F6\",\n            \"္ဆ\": \"\\u00E4\",\n            \"္ဆ_narrow\": \"\",\n            \"္ဇ\": \"\\u00C6\",\n            \"္ဈ\": \"\\u00D1\",\n            \"္ဋ\": \"\\u00B3\",\n            \"္ဌ\": \"\\u00B2\",\n            \"္ဍ\": \"\",\n            \"္ဎ\": \"\",\n            \"္ဏ\": \"\\u00D6\",\n            \"္တ\": \"\\u00E5\",\n            \"္တ_narrow\": \"\\u00C5\",\n            \"္တွ\": \"\\u00C9\",\n            \"္ထ\": \"\\u00AC\",\n            \"္ထ_narrow\": \"\\u00A6\",\n            \"္ဒ\": \"\\u00B4\",\n            \"္ဓ\": \"\\u00A8\",\n            \"္န\": \"\\u00E9\",\n            \"္ပ\": \"\\u00DC\",\n            \"္ဖ\": \"\\u00E6\",\n            \"္ဗ\": \"\\u00C1\",\n            \"္ဘ\": \"\\u00C7\",\n            \"္မ\": \"\\u00AE\",\n            \"္ယ\": \"\",\n            \"္ရ\": \"\",\n            \"္လ\": \"\\u2019\",\n            \"္သ\": \"\",\n            \"္အ\": \"\"\n        },\n        \"yapin\": {\n            \"ျ\": \"s\",\n            \"ျ_alt\": \"\\u00DF\",\n            \"ျွ_lig\": \"R\",\n            \"ျှ_lig\": \"Q\",\n            \"ျွှ_lig\": \"W\"\n        },\n        \"yayit\": {\n            \"ြ\": \"j\",\n            \"ြ_wide\": \"M\",\n            \"ြ_upper_narrow\": \"N\",\n            \"ြ_upper_wide\": \"B\",\n            \"ြ_lower_narrow\": \"\\u0060\",\n            \"ြ_lower_wide\": \"\\u007E\",\n            \"ြ_lower_upper_narrow\": \"\",\n            \"ြ_lower_upper_wide\": \"\",\n            \"ြွ_narrow\": \"\\u003E\",\n            \"ြွ_wide\": \"\\u003C\",\n            \"ြွ_upper_narrow\": \"\",\n            \"ြွ_upper_wide\": \"\",\n            \"ြု_narrow\": \"\\u00FB\",\n            \"ြု_wide\": \"\\u00EA\",\n            \"ြု_upper_narrow\": \"\",\n            \"ြု_upper_wide\": \"\"\n        },\n        \"wasway\": {\n            \"ွ\": \"G\",\n            \"ွှ_lig\": \"T\",\n            \"ွှ_small\": \"\"\n        },\n        \"hatoh\": {\n            \"ှ\": \"S\",\n            \"ှ_small\": \"\\u00A7\",\n            \"ှု_lig\": \"I\",\n            \"ှူ_lig\": \"\\u00AA\"\n        },\n        \"eVowel\": {\n            \"ေ\": \"a\"\n        },\n        \"uVowel\": {\n            \"ိ\": \"d\",\n            \"ိံ_lig\": \"\\u00F0\",\n            \"ီ\": \"D\"\n        },\n        \"lVowel\": {\n            \"ု\": \"k\",\n            \"ု_tall\": \"K\",\n            \"ူ\": \"l\",\n            \"ူ_tall\": \"L\"\n        },\n        \"anusvara\": {\n            \"ံ\": \"H\",\n            \"ဲ\": \"J\"\n        },\n        \"aVowel\": {\n            \"ါ\": \"g\",\n            \"ါ်_lig\": \":\",\n            \"ာ\": \"m\"\n        },\n        \"lDot\": {\n            \"့\": \"U\",\n            \"့_alt\": \"Y\",\n            \"့_left\": \"h\"\n        },\n        \"asat\": {\n            \"်\": \"f\"\n        },\n        \"visarga\": {\n            \"း\": \";\"\n        }\n    },\n\n    \"wwin_burmese1\": {\n        \"fonts\": [\"Wwin_Burmese1\", \"Wwin_Burmese\"],\n        \"kinzi\": {\n            \"င်္\": \"F\",\n            \"င်္ိ_lig\": \"\\u00F5\",\n            \"င်္ီ_lig\": \"\\u00F4\",\n            \"င်္ံ_lig\": \"\\u00F8\"\n        },\n        \"cons\": {\n            \"က\": \"u\",\n            \"ခ\": \"c\",\n            \"ဂ\": \"*\",\n            \"ဃ\": \"C\",\n            \"င\": \"i\",\n            \"စ\": \"p\",\n            \"ဆ\": \"q\",\n            \"ဇ\": \"Z\",\n            \"ဈ\": \"ps\",\n            \"ဉ\": \"\\u005E\",\n            \"ဉ_alt\": \"\",\n            \"ည\": \"n\",\n            \"ည_alt\": \"!\",\n            \"ဋ\": \"\\u00CB\",\n            \"ဋ_alt\": \"\\u00C9\",\n            \"ဌ\": \"X\",\n            \"ဍ\": \"\\u00C8\",\n            \"ဎ\": \"\\u00CA\",\n            \"ဏ\": \"%\",\n            \"တ\": \"w\",\n            \"ထ\": \"x\",\n            \"ဒ\": \"\\u0027\",\n            \"ဓ\": \"\\u0022\",\n            \"န\": \"e\",\n            \"န_alt\": \"E\",\n            \"ပ\": \"y\",\n            \"ဖ\": \"z\",\n            \"ဗ\": \"A\",\n            \"ဘ\": \"b\",\n            \"မ\": \"r\",\n            \"ယ\": \",\",\n            \"ရ\": \"&\",\n            \"ရ_alt\": \"\\u00B6\",\n            \"ရ_tall\": \"\\u00B1\",\n            \"လ\": \"v\",\n            \"ဝ\": \"\\u00FF\",\n            \"သ\": \"o\",\n            \"ဟ\": \"[\",\n            \"ဠ\": \"V\",\n            \"အ\": \"t\",\n            \"ဣ\": \"\\u00C1\",\n            \"ဤ\": \"T\",\n            \"ဥ\": \"O\",\n            \"ဦ\": \"OD\",\n            \"ဧ\": \"{\",\n            \"ဩ\": \"=o\",\n            \"ဪ\": \"a=omf\",\n            \"ဿ\": \"\\u005C\",\n            \"၌\": \"Y\",\n            \"၍\": \"I\",\n            \"၎\": \"\",\n            \"၎င်း\": \"\\u201A\",\n            \"၏\": \".\",\n            \"၀\": \"0\",\n            \"၁\": \"1\",\n            \"၂\": \"2\",\n            \"၃\": \"3\",\n            \"၄\": \"4\",\n            \"၅\": \"5\",\n            \"၆\": \"6\",\n            \"၇\": \"7\",\n            \"၈\": \"8\",\n            \"၉\": \"9\",\n            \"။\": \"?\",\n            \"၊\": \"\\u002F\"\n        },\n        \"lig\": {\n            \"ဍ္ဍ\": \"\\u00C4\",\n            \"ဍ္ဎ\": \"\\u00C5\",\n            \"ဏ္ဍ\": \"\\u00BE\",\n            \"ဏ္ဌ\": \"\\u00BF\",\n            \"ဏ္ဏ\": \"\\u00C0\",\n            \"ဏ္ဋ\": \"\\u00C2\",\n            \"ဋ္ဋ\": \"\\u00C3\",\n            \"ဋ္ဌ\": \"\\u00CF\",\n            \"ဉ္စ\": \"\\u00CC\",\n            \"ဉ္ဇ\": \"\\u00CD\"\n        },\n        \"stack\": {\n            \"္က\": \"U\",\n            \"္ခ\": \"Q\",\n            \"္ဂ\": \"\\u007E\",\n            \"္ဃ\": \"\\u0192\",\n            \"္စ\": \"P\",\n            \"္ဆ\": \"\\u003E\",\n            \"္ဆ_narrow\": \"\",\n            \"္ဇ\": \"\\u2026\",\n            \"္ဇျ_lig\": \"\\u00C6\",\n            \"္ဈ\": \"\\u00C6\",\n            \"္ဋ\": \"\",\n            \"္ဌ\": \"\",\n            \"္ဍ\": \"\",\n            \"္ဎ\": \"\\u201E\",\n            \"္ဏ\": \"\",\n            \"္တ\": \"W\",\n            \"္တ_narrow\": \"\\u00A9\",\n            \"္တ_narrow2\": \"\\u0153\",\n            \"္တွ\": \"\",\n            \"္ထ\": \"\\u02C6\",\n            \"္ထ_narrow\": \"\\u00CE\",\n            \"္ဒ\": \"N\",\n            \"္ဓ\": \"\\u003C\",\n            \"္န\": \"M\",\n            \"္ပ\": \"\\u0060\",\n            \"္ဖ\": \"\\u2030\",\n            \"္ဗ\": \"\\u0160\",\n            \"္ဘ\": \"B\",\n            \"္မ\": \"R\",\n            \"္ယ\": \"\",\n            \"္ရ\": \"\",\n            \"္လ\": \"\\u2020\",\n            \"္သ\": \"\",\n            \"္အ\": \"\"\n        },\n        \"yapin\": {\n            \"ျ\": \"s\",\n            \"ျ_alt\": \"\",\n            \"ျွ_lig\": \"\\u007C\",\n            \"ျွ_alt\": \"\\u00ED\",\n            \"ျှ_lig\": \"#\",\n            \"ျွှ_lig\": \"\\u00E9\",\n            \"ျွှ_alt\": \"\\u00EE\"\n        },\n        \"yayit\": {\n            \"ြ\": \"j\",\n            \"ြ_wide\": \"=\",\n            \"ြ_upper_narrow\": \"+\",\n            \"ြ_upper_wide\": \"}\",\n            \"ြ_lower_narrow\": \"\",\n            \"ြ_lower_wide\": \"\",\n            \"ြ_lower_upper_narrow\": \"\",\n            \"ြ_lower_upper_wide\": \"\",\n            \"ြွ_narrow\": \"\\u00B9\",\n            \"ြွ_wide\": \"\\u00BA\",\n            \"ြွ_upper_narrow\": \"\",\n            \"ြွ_upper_wide\": \"\",\n            \"ြု_narrow\": \"\\u00F0\",\n            \"ြု_wide\": \"\\u00F1\",\n            \"ြု_upper_narrow\": \"\",\n            \"ြု_upper_wide\": \"\",\n            \"ြို_narrow\": \"\\u00F2\",\n            \"ြို_wide\": \"\\u00F3\"\n        },\n        \"wasway\": {\n            \"ွ\": \"G\",\n            \"ွ_alt\": \"\\u00EB\",\n            \"ွှ_lig\": \"$\",\n            \"ွှ_small\": \"\",\n            \"ွှ_alt\": \"\\u00B8\",\n            \"ွှ_alt2\": \"\\u00EC\",\n            \"ွှ_alt3\": \"\\u00EF\"\n        },\n        \"hatoh\": {\n            \"ှ\": \"S\",\n            \"ှ_small\": \"\\u2021\",\n            \"ှ_alt\": \"\\u00EA\",\n            \"ှု_lig\": \"_\",\n            \"ှူ_lig\": \"\\u2013\"\n        },\n        \"eVowel\": {\n            \"ေ\": \"a\"\n        },\n        \"uVowel\": {\n            \"ိ\": \"d\",\n            \"ိံ_lig\": \"\\u00F6\",\n            \"ီ\": \"D\"\n        },\n        \"lVowel\": {\n            \"ု\": \"k\",\n            \"ု_tall\": \"K\",\n            \"ူ\": \"l\",\n            \"ူ_tall\": \"L\"\n        },\n        \"anusvara\": {\n            \"ံ\": \"H\",\n            \"ဲ\": \"J\"\n        },\n        \"aVowel\": {\n            \"ါ\": \"g\",\n            \"ါ်_lig\": \":\",\n            \"ာ\": \"m\"\n        },\n        \"lDot\": {\n            \"့\": \"\\u0152\",\n            \"့_alt\": \"@\",\n            \"့_alt2\": \"\\u2039\",\n            \"့_left\": \"h\",\n            \"့_left2\": \"\\u2022\",\n            \"့_left3\": \"\\u203A\"\n        },\n        \"asat\": {\n            \"်\": \"f\"\n        },\n        \"visarga\": {\n            \"း\": \";\"\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tls/specs.js\n **/"],"sourceRoot":""}